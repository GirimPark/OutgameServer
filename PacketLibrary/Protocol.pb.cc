// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol.proto

#include "Protocol.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace Protocol {
constexpr FriendInfo::FriendInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , state_(0){}
struct FriendInfoDefaultTypeInternal {
  constexpr FriendInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FriendInfoDefaultTypeInternal() {}
  union {
    FriendInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FriendInfoDefaultTypeInternal _FriendInfo_default_instance_;
constexpr S2C_ValidationRequest::S2C_ValidationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct S2C_ValidationRequestDefaultTypeInternal {
  constexpr S2C_ValidationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2C_ValidationRequestDefaultTypeInternal() {}
  union {
    S2C_ValidationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2C_ValidationRequestDefaultTypeInternal _S2C_ValidationRequest_default_instance_;
constexpr C2S_ValidationResponse::C2S_ValidationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct C2S_ValidationResponseDefaultTypeInternal {
  constexpr C2S_ValidationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~C2S_ValidationResponseDefaultTypeInternal() {}
  union {
    C2S_ValidationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT C2S_ValidationResponseDefaultTypeInternal _C2S_ValidationResponse_default_instance_;
constexpr S2C_SessionExpiredNotification::S2C_SessionExpiredNotification(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct S2C_SessionExpiredNotificationDefaultTypeInternal {
  constexpr S2C_SessionExpiredNotificationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2C_SessionExpiredNotificationDefaultTypeInternal() {}
  union {
    S2C_SessionExpiredNotification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2C_SessionExpiredNotificationDefaultTypeInternal _S2C_SessionExpiredNotification_default_instance_;
constexpr C2S_LoginRequest::C2S_LoginRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , password_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct C2S_LoginRequestDefaultTypeInternal {
  constexpr C2S_LoginRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~C2S_LoginRequestDefaultTypeInternal() {}
  union {
    C2S_LoginRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT C2S_LoginRequestDefaultTypeInternal _C2S_LoginRequest_default_instance_;
constexpr S2C_LoginResponse::S2C_LoginResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : friendlist_()
  , pendinglist_()
  , response_(0){}
struct S2C_LoginResponseDefaultTypeInternal {
  constexpr S2C_LoginResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2C_LoginResponseDefaultTypeInternal() {}
  union {
    S2C_LoginResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2C_LoginResponseDefaultTypeInternal _S2C_LoginResponse_default_instance_;
constexpr C2S_LogoutRequest::C2S_LogoutRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct C2S_LogoutRequestDefaultTypeInternal {
  constexpr C2S_LogoutRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~C2S_LogoutRequestDefaultTypeInternal() {}
  union {
    C2S_LogoutRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT C2S_LogoutRequestDefaultTypeInternal _C2S_LogoutRequest_default_instance_;
constexpr S2C_LogoutResponse::S2C_LogoutResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct S2C_LogoutResponseDefaultTypeInternal {
  constexpr S2C_LogoutResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2C_LogoutResponseDefaultTypeInternal() {}
  union {
    S2C_LogoutResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2C_LogoutResponseDefaultTypeInternal _S2C_LogoutResponse_default_instance_;
constexpr C2S_JoinRequest::C2S_JoinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , password_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct C2S_JoinRequestDefaultTypeInternal {
  constexpr C2S_JoinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~C2S_JoinRequestDefaultTypeInternal() {}
  union {
    C2S_JoinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT C2S_JoinRequestDefaultTypeInternal _C2S_JoinRequest_default_instance_;
constexpr S2C_JoinResponse::S2C_JoinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : success_(nullptr){}
struct S2C_JoinResponseDefaultTypeInternal {
  constexpr S2C_JoinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2C_JoinResponseDefaultTypeInternal() {}
  union {
    S2C_JoinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2C_JoinResponseDefaultTypeInternal _S2C_JoinResponse_default_instance_;
constexpr C2S_FindFriendRequest::C2S_FindFriendRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct C2S_FindFriendRequestDefaultTypeInternal {
  constexpr C2S_FindFriendRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~C2S_FindFriendRequestDefaultTypeInternal() {}
  union {
    C2S_FindFriendRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT C2S_FindFriendRequestDefaultTypeInternal _C2S_FindFriendRequest_default_instance_;
constexpr S2C_FindFriendResponse::S2C_FindFriendResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : exist_(nullptr)
  , friendinfo_(nullptr)
  , requeststate_(0){}
struct S2C_FindFriendResponseDefaultTypeInternal {
  constexpr S2C_FindFriendResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2C_FindFriendResponseDefaultTypeInternal() {}
  union {
    S2C_FindFriendResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2C_FindFriendResponseDefaultTypeInternal _S2C_FindFriendResponse_default_instance_;
constexpr C2S_AddFriendRequest::C2S_AddFriendRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct C2S_AddFriendRequestDefaultTypeInternal {
  constexpr C2S_AddFriendRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~C2S_AddFriendRequestDefaultTypeInternal() {}
  union {
    C2S_AddFriendRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT C2S_AddFriendRequestDefaultTypeInternal _C2S_AddFriendRequest_default_instance_;
constexpr S2C_AddFriendResponse::S2C_AddFriendResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : success_(nullptr){}
struct S2C_AddFriendResponseDefaultTypeInternal {
  constexpr S2C_AddFriendResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2C_AddFriendResponseDefaultTypeInternal() {}
  union {
    S2C_AddFriendResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2C_AddFriendResponseDefaultTypeInternal _S2C_AddFriendResponse_default_instance_;
constexpr S2O_AddFriendNotification::S2O_AddFriendNotification(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct S2O_AddFriendNotificationDefaultTypeInternal {
  constexpr S2O_AddFriendNotificationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2O_AddFriendNotificationDefaultTypeInternal() {}
  union {
    S2O_AddFriendNotification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2O_AddFriendNotificationDefaultTypeInternal _S2O_AddFriendNotification_default_instance_;
constexpr C2S_CancelAddFriendRequest::C2S_CancelAddFriendRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct C2S_CancelAddFriendRequestDefaultTypeInternal {
  constexpr C2S_CancelAddFriendRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~C2S_CancelAddFriendRequestDefaultTypeInternal() {}
  union {
    C2S_CancelAddFriendRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT C2S_CancelAddFriendRequestDefaultTypeInternal _C2S_CancelAddFriendRequest_default_instance_;
constexpr S2C_CancelAddFriendResponse::S2C_CancelAddFriendResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : success_(nullptr){}
struct S2C_CancelAddFriendResponseDefaultTypeInternal {
  constexpr S2C_CancelAddFriendResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2C_CancelAddFriendResponseDefaultTypeInternal() {}
  union {
    S2C_CancelAddFriendResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2C_CancelAddFriendResponseDefaultTypeInternal _S2C_CancelAddFriendResponse_default_instance_;
constexpr S2O_CancelAddFriendNotification::S2O_CancelAddFriendNotification(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct S2O_CancelAddFriendNotificationDefaultTypeInternal {
  constexpr S2O_CancelAddFriendNotificationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2O_CancelAddFriendNotificationDefaultTypeInternal() {}
  union {
    S2O_CancelAddFriendNotification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2O_CancelAddFriendNotificationDefaultTypeInternal _S2O_CancelAddFriendNotification_default_instance_;
constexpr C2S_AcceptFriendRequest::C2S_AcceptFriendRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : acceptedusername_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct C2S_AcceptFriendRequestDefaultTypeInternal {
  constexpr C2S_AcceptFriendRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~C2S_AcceptFriendRequestDefaultTypeInternal() {}
  union {
    C2S_AcceptFriendRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT C2S_AcceptFriendRequestDefaultTypeInternal _C2S_AcceptFriendRequest_default_instance_;
constexpr S2C_AcceptFriendResponse::S2C_AcceptFriendResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : success_(nullptr)
  , newfriendinfo_(nullptr){}
struct S2C_AcceptFriendResponseDefaultTypeInternal {
  constexpr S2C_AcceptFriendResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2C_AcceptFriendResponseDefaultTypeInternal() {}
  union {
    S2C_AcceptFriendResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2C_AcceptFriendResponseDefaultTypeInternal _S2C_AcceptFriendResponse_default_instance_;
constexpr S2O_AcceptFriendNotification::S2O_AcceptFriendNotification(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : newfriendinfo_(nullptr){}
struct S2O_AcceptFriendNotificationDefaultTypeInternal {
  constexpr S2O_AcceptFriendNotificationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2O_AcceptFriendNotificationDefaultTypeInternal() {}
  union {
    S2O_AcceptFriendNotification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2O_AcceptFriendNotificationDefaultTypeInternal _S2O_AcceptFriendNotification_default_instance_;
constexpr C2S_RefuseFriendRequest::C2S_RefuseFriendRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : refusedusername_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct C2S_RefuseFriendRequestDefaultTypeInternal {
  constexpr C2S_RefuseFriendRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~C2S_RefuseFriendRequestDefaultTypeInternal() {}
  union {
    C2S_RefuseFriendRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT C2S_RefuseFriendRequestDefaultTypeInternal _C2S_RefuseFriendRequest_default_instance_;
constexpr S2C_RefuseFriendResponse::S2C_RefuseFriendResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : refusedusername_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , success_(nullptr){}
struct S2C_RefuseFriendResponseDefaultTypeInternal {
  constexpr S2C_RefuseFriendResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2C_RefuseFriendResponseDefaultTypeInternal() {}
  union {
    S2C_RefuseFriendResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2C_RefuseFriendResponseDefaultTypeInternal _S2C_RefuseFriendResponse_default_instance_;
constexpr C2S_DelFriendRequest::C2S_DelFriendRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : friendname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct C2S_DelFriendRequestDefaultTypeInternal {
  constexpr C2S_DelFriendRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~C2S_DelFriendRequestDefaultTypeInternal() {}
  union {
    C2S_DelFriendRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT C2S_DelFriendRequestDefaultTypeInternal _C2S_DelFriendRequest_default_instance_;
constexpr S2C_DelFriendResponse::S2C_DelFriendResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : delfriendname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , success_(nullptr){}
struct S2C_DelFriendResponseDefaultTypeInternal {
  constexpr S2C_DelFriendResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2C_DelFriendResponseDefaultTypeInternal() {}
  union {
    S2C_DelFriendResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2C_DelFriendResponseDefaultTypeInternal _S2C_DelFriendResponse_default_instance_;
constexpr S2O_DelFriendNotification::S2O_DelFriendNotification(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : delfriendname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct S2O_DelFriendNotificationDefaultTypeInternal {
  constexpr S2O_DelFriendNotificationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2O_DelFriendNotificationDefaultTypeInternal() {}
  union {
    S2O_DelFriendNotification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2O_DelFriendNotificationDefaultTypeInternal _S2O_DelFriendNotification_default_instance_;
constexpr S2O_UpdateStateNotification::S2O_UpdateStateNotification(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : friendinfo_(nullptr){}
struct S2O_UpdateStateNotificationDefaultTypeInternal {
  constexpr S2O_UpdateStateNotificationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2O_UpdateStateNotificationDefaultTypeInternal() {}
  union {
    S2O_UpdateStateNotification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2O_UpdateStateNotificationDefaultTypeInternal _S2O_UpdateStateNotification_default_instance_;
constexpr C2S_CreateRoomRequest::C2S_CreateRoomRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct C2S_CreateRoomRequestDefaultTypeInternal {
  constexpr C2S_CreateRoomRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~C2S_CreateRoomRequestDefaultTypeInternal() {}
  union {
    C2S_CreateRoomRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT C2S_CreateRoomRequestDefaultTypeInternal _C2S_CreateRoomRequest_default_instance_;
constexpr S2C_CreateRoomResponse::S2C_CreateRoomResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : roomcode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , success_(nullptr){}
struct S2C_CreateRoomResponseDefaultTypeInternal {
  constexpr S2C_CreateRoomResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2C_CreateRoomResponseDefaultTypeInternal() {}
  union {
    S2C_CreateRoomResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2C_CreateRoomResponseDefaultTypeInternal _S2C_CreateRoomResponse_default_instance_;
constexpr C2S_JoinRoomRequest::C2S_JoinRoomRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : roomcode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct C2S_JoinRoomRequestDefaultTypeInternal {
  constexpr C2S_JoinRoomRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~C2S_JoinRoomRequestDefaultTypeInternal() {}
  union {
    C2S_JoinRoomRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT C2S_JoinRoomRequestDefaultTypeInternal _C2S_JoinRoomRequest_default_instance_;
constexpr S2C_JoinRoomResponse::S2C_JoinRoomResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ipaddress_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , resultcode_(0){}
struct S2C_JoinRoomResponseDefaultTypeInternal {
  constexpr S2C_JoinRoomResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2C_JoinRoomResponseDefaultTypeInternal() {}
  union {
    S2C_JoinRoomResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2C_JoinRoomResponseDefaultTypeInternal _S2C_JoinRoomResponse_default_instance_;
constexpr C2S_QuitRoomRequest::C2S_QuitRoomRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct C2S_QuitRoomRequestDefaultTypeInternal {
  constexpr C2S_QuitRoomRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~C2S_QuitRoomRequestDefaultTypeInternal() {}
  union {
    C2S_QuitRoomRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT C2S_QuitRoomRequestDefaultTypeInternal _C2S_QuitRoomRequest_default_instance_;
constexpr S2C_QuitRoomResponse::S2C_QuitRoomResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : success_(nullptr){}
struct S2C_QuitRoomResponseDefaultTypeInternal {
  constexpr S2C_QuitRoomResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2C_QuitRoomResponseDefaultTypeInternal() {}
  union {
    S2C_QuitRoomResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2C_QuitRoomResponseDefaultTypeInternal _S2C_QuitRoomResponse_default_instance_;
constexpr C2S_InviteFriendRequest::C2S_InviteFriendRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct C2S_InviteFriendRequestDefaultTypeInternal {
  constexpr C2S_InviteFriendRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~C2S_InviteFriendRequestDefaultTypeInternal() {}
  union {
    C2S_InviteFriendRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT C2S_InviteFriendRequestDefaultTypeInternal _C2S_InviteFriendRequest_default_instance_;
constexpr S2C_InviteFriendResponse::S2C_InviteFriendResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : invitedusername_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , success_(nullptr){}
struct S2C_InviteFriendResponseDefaultTypeInternal {
  constexpr S2C_InviteFriendResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2C_InviteFriendResponseDefaultTypeInternal() {}
  union {
    S2C_InviteFriendResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2C_InviteFriendResponseDefaultTypeInternal _S2C_InviteFriendResponse_default_instance_;
constexpr S2O_InviteFriendNotification::S2O_InviteFriendNotification(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , roomcode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct S2O_InviteFriendNotificationDefaultTypeInternal {
  constexpr S2O_InviteFriendNotificationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2O_InviteFriendNotificationDefaultTypeInternal() {}
  union {
    S2O_InviteFriendNotification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2O_InviteFriendNotificationDefaultTypeInternal _S2O_InviteFriendNotification_default_instance_;
constexpr C2S_StartGameRequest::C2S_StartGameRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct C2S_StartGameRequestDefaultTypeInternal {
  constexpr C2S_StartGameRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~C2S_StartGameRequestDefaultTypeInternal() {}
  union {
    C2S_StartGameRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT C2S_StartGameRequestDefaultTypeInternal _C2S_StartGameRequest_default_instance_;
constexpr S2C_StartGameResponse::S2C_StartGameResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : success_(nullptr){}
struct S2C_StartGameResponseDefaultTypeInternal {
  constexpr S2C_StartGameResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2C_StartGameResponseDefaultTypeInternal() {}
  union {
    S2C_StartGameResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2C_StartGameResponseDefaultTypeInternal _S2C_StartGameResponse_default_instance_;
constexpr C2S_EndGameRequest::C2S_EndGameRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct C2S_EndGameRequestDefaultTypeInternal {
  constexpr C2S_EndGameRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~C2S_EndGameRequestDefaultTypeInternal() {}
  union {
    C2S_EndGameRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT C2S_EndGameRequestDefaultTypeInternal _C2S_EndGameRequest_default_instance_;
constexpr S2C_EndGameResponse::S2C_EndGameResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : success_(nullptr){}
struct S2C_EndGameResponseDefaultTypeInternal {
  constexpr S2C_EndGameResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~S2C_EndGameResponseDefaultTypeInternal() {}
  union {
    S2C_EndGameResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT S2C_EndGameResponseDefaultTypeInternal _S2C_EndGameResponse_default_instance_;
}  // namespace Protocol
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Protocol_2eproto[40];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_Protocol_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Protocol_2eproto = nullptr;

const uint32_t TableStruct_Protocol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::FriendInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::FriendInfo, username_),
  PROTOBUF_FIELD_OFFSET(::Protocol::FriendInfo, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_ValidationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_ValidationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_SessionExpiredNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_LoginRequest, username_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_LoginRequest, password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoginResponse, response_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoginResponse, friendlist_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoginResponse, pendinglist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_LogoutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LogoutResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_JoinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_JoinRequest, username_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_JoinRequest, password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_JoinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_JoinResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_FindFriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_FindFriendRequest, username_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_FindFriendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_FindFriendResponse, exist_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_FindFriendResponse, friendinfo_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_FindFriendResponse, requeststate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_AddFriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_AddFriendRequest, username_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_AddFriendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_AddFriendResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2O_AddFriendNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2O_AddFriendNotification, username_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_CancelAddFriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_CancelAddFriendRequest, username_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_CancelAddFriendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_CancelAddFriendResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2O_CancelAddFriendNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2O_CancelAddFriendNotification, username_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_AcceptFriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_AcceptFriendRequest, acceptedusername_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_AcceptFriendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_AcceptFriendResponse, success_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_AcceptFriendResponse, newfriendinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2O_AcceptFriendNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2O_AcceptFriendNotification, newfriendinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_RefuseFriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_RefuseFriendRequest, refusedusername_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_RefuseFriendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_RefuseFriendResponse, success_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_RefuseFriendResponse, refusedusername_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_DelFriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_DelFriendRequest, friendname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DelFriendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DelFriendResponse, success_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DelFriendResponse, delfriendname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2O_DelFriendNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2O_DelFriendNotification, delfriendname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2O_UpdateStateNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2O_UpdateStateNotification, friendinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_CreateRoomRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_CreateRoomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_CreateRoomResponse, success_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_CreateRoomResponse, roomcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_JoinRoomRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_JoinRoomRequest, roomcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_JoinRoomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_JoinRoomResponse, resultcode_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_JoinRoomResponse, ipaddress_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_QuitRoomRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_QuitRoomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_QuitRoomResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_InviteFriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_InviteFriendRequest, username_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_InviteFriendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_InviteFriendResponse, success_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_InviteFriendResponse, invitedusername_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2O_InviteFriendNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2O_InviteFriendNotification, username_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2O_InviteFriendNotification, roomcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_StartGameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_StartGameResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_StartGameResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_EndGameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_EndGameResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_EndGameResponse, success_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Protocol::FriendInfo)},
  { 8, -1, -1, sizeof(::Protocol::S2C_ValidationRequest)},
  { 14, -1, -1, sizeof(::Protocol::C2S_ValidationResponse)},
  { 20, -1, -1, sizeof(::Protocol::S2C_SessionExpiredNotification)},
  { 26, -1, -1, sizeof(::Protocol::C2S_LoginRequest)},
  { 34, -1, -1, sizeof(::Protocol::S2C_LoginResponse)},
  { 43, -1, -1, sizeof(::Protocol::C2S_LogoutRequest)},
  { 49, -1, -1, sizeof(::Protocol::S2C_LogoutResponse)},
  { 55, -1, -1, sizeof(::Protocol::C2S_JoinRequest)},
  { 63, -1, -1, sizeof(::Protocol::S2C_JoinResponse)},
  { 70, -1, -1, sizeof(::Protocol::C2S_FindFriendRequest)},
  { 77, -1, -1, sizeof(::Protocol::S2C_FindFriendResponse)},
  { 86, -1, -1, sizeof(::Protocol::C2S_AddFriendRequest)},
  { 93, -1, -1, sizeof(::Protocol::S2C_AddFriendResponse)},
  { 100, -1, -1, sizeof(::Protocol::S2O_AddFriendNotification)},
  { 107, -1, -1, sizeof(::Protocol::C2S_CancelAddFriendRequest)},
  { 114, -1, -1, sizeof(::Protocol::S2C_CancelAddFriendResponse)},
  { 121, -1, -1, sizeof(::Protocol::S2O_CancelAddFriendNotification)},
  { 128, -1, -1, sizeof(::Protocol::C2S_AcceptFriendRequest)},
  { 135, -1, -1, sizeof(::Protocol::S2C_AcceptFriendResponse)},
  { 143, -1, -1, sizeof(::Protocol::S2O_AcceptFriendNotification)},
  { 150, -1, -1, sizeof(::Protocol::C2S_RefuseFriendRequest)},
  { 157, -1, -1, sizeof(::Protocol::S2C_RefuseFriendResponse)},
  { 165, -1, -1, sizeof(::Protocol::C2S_DelFriendRequest)},
  { 172, -1, -1, sizeof(::Protocol::S2C_DelFriendResponse)},
  { 180, -1, -1, sizeof(::Protocol::S2O_DelFriendNotification)},
  { 187, -1, -1, sizeof(::Protocol::S2O_UpdateStateNotification)},
  { 194, -1, -1, sizeof(::Protocol::C2S_CreateRoomRequest)},
  { 200, -1, -1, sizeof(::Protocol::S2C_CreateRoomResponse)},
  { 208, -1, -1, sizeof(::Protocol::C2S_JoinRoomRequest)},
  { 215, -1, -1, sizeof(::Protocol::S2C_JoinRoomResponse)},
  { 223, -1, -1, sizeof(::Protocol::C2S_QuitRoomRequest)},
  { 229, -1, -1, sizeof(::Protocol::S2C_QuitRoomResponse)},
  { 236, -1, -1, sizeof(::Protocol::C2S_InviteFriendRequest)},
  { 243, -1, -1, sizeof(::Protocol::S2C_InviteFriendResponse)},
  { 251, -1, -1, sizeof(::Protocol::S2O_InviteFriendNotification)},
  { 259, -1, -1, sizeof(::Protocol::C2S_StartGameRequest)},
  { 265, -1, -1, sizeof(::Protocol::S2C_StartGameResponse)},
  { 272, -1, -1, sizeof(::Protocol::C2S_EndGameRequest)},
  { 278, -1, -1, sizeof(::Protocol::S2C_EndGameResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_FriendInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2C_ValidationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2S_ValidationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2C_SessionExpiredNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2S_LoginRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2C_LoginResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2S_LogoutRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2C_LogoutResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2S_JoinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2C_JoinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2S_FindFriendRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2C_FindFriendResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2S_AddFriendRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2C_AddFriendResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2O_AddFriendNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2S_CancelAddFriendRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2C_CancelAddFriendResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2O_CancelAddFriendNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2S_AcceptFriendRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2C_AcceptFriendResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2O_AcceptFriendNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2S_RefuseFriendRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2C_RefuseFriendResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2S_DelFriendRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2C_DelFriendResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2O_DelFriendNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2O_UpdateStateNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2S_CreateRoomRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2C_CreateRoomResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2S_JoinRoomRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2C_JoinRoomResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2S_QuitRoomRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2C_QuitRoomResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2S_InviteFriendRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2C_InviteFriendResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2O_InviteFriendNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2S_StartGameRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2C_StartGameResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2S_EndGameRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2C_EndGameResponse_default_instance_),
};

const char descriptor_table_protodef_Protocol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016Protocol.proto\022\010Protocol\032\036google/proto"
  "buf/wrappers.proto\"-\n\nFriendInfo\022\020\n\010user"
  "name\030\001 \001(\t\022\r\n\005state\030\002 \001(\005\"\027\n\025S2C_Validat"
  "ionRequest\"\030\n\026C2S_ValidationResponse\" \n\036"
  "S2C_SessionExpiredNotification\"6\n\020C2S_Lo"
  "ginRequest\022\020\n\010username\030\001 \001(\t\022\020\n\010password"
  "\030\002 \001(\t\"z\n\021S2C_LoginResponse\022\020\n\010response\030"
  "\001 \001(\005\022(\n\nfriendList\030\002 \003(\0132\024.Protocol.Fri"
  "endInfo\022)\n\013pendingList\030\003 \003(\0132\024.Protocol."
  "FriendInfo\"\023\n\021C2S_LogoutRequest\"\024\n\022S2C_L"
  "ogoutResponse\"5\n\017C2S_JoinRequest\022\020\n\010user"
  "name\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"\?\n\020S2C_Join"
  "Response\022+\n\007success\030\001 \001(\0132\032.google.proto"
  "buf.BoolValue\")\n\025C2S_FindFriendRequest\022\020"
  "\n\010username\030\001 \001(\t\"\203\001\n\026S2C_FindFriendRespo"
  "nse\022)\n\005exist\030\001 \001(\0132\032.google.protobuf.Boo"
  "lValue\022(\n\nfriendInfo\030\002 \001(\0132\024.Protocol.Fr"
  "iendInfo\022\024\n\014requestState\030\003 \001(\005\"(\n\024C2S_Ad"
  "dFriendRequest\022\020\n\010username\030\001 \001(\t\"D\n\025S2C_"
  "AddFriendResponse\022+\n\007success\030\001 \001(\0132\032.goo"
  "gle.protobuf.BoolValue\"-\n\031S2O_AddFriendN"
  "otification\022\020\n\010username\030\001 \001(\t\".\n\032C2S_Can"
  "celAddFriendRequest\022\020\n\010username\030\001 \001(\t\"J\n"
  "\033S2C_CancelAddFriendResponse\022+\n\007success\030"
  "\001 \001(\0132\032.google.protobuf.BoolValue\"3\n\037S2O"
  "_CancelAddFriendNotification\022\020\n\010username"
  "\030\001 \001(\t\"3\n\027C2S_AcceptFriendRequest\022\030\n\020acc"
  "eptedUsername\030\001 \001(\t\"t\n\030S2C_AcceptFriendR"
  "esponse\022+\n\007success\030\001 \001(\0132\032.google.protob"
  "uf.BoolValue\022+\n\rnewFriendInfo\030\002 \001(\0132\024.Pr"
  "otocol.FriendInfo\"K\n\034S2O_AcceptFriendNot"
  "ification\022+\n\rnewFriendInfo\030\001 \001(\0132\024.Proto"
  "col.FriendInfo\"2\n\027C2S_RefuseFriendReques"
  "t\022\027\n\017refusedUsername\030\001 \001(\t\"`\n\030S2C_Refuse"
  "FriendResponse\022+\n\007success\030\001 \001(\0132\032.google"
  ".protobuf.BoolValue\022\027\n\017refusedUsername\030\002"
  " \001(\t\"*\n\024C2S_DelFriendRequest\022\022\n\nfriendNa"
  "me\030\001 \001(\t\"[\n\025S2C_DelFriendResponse\022+\n\007suc"
  "cess\030\001 \001(\0132\032.google.protobuf.BoolValue\022\025"
  "\n\rdelFriendName\030\002 \001(\t\"2\n\031S2O_DelFriendNo"
  "tification\022\025\n\rdelFriendName\030\001 \001(\t\"G\n\033S2O"
  "_UpdateStateNotification\022(\n\nfriendInfo\030\001"
  " \001(\0132\024.Protocol.FriendInfo\"\027\n\025C2S_Create"
  "RoomRequest\"W\n\026S2C_CreateRoomResponse\022+\n"
  "\007success\030\001 \001(\0132\032.google.protobuf.BoolVal"
  "ue\022\020\n\010roomCode\030\002 \001(\t\"\'\n\023C2S_JoinRoomRequ"
  "est\022\020\n\010roomCode\030\001 \001(\t\"=\n\024S2C_JoinRoomRes"
  "ponse\022\022\n\nresultCode\030\001 \001(\005\022\021\n\tipAddress\030\002"
  " \001(\t\"\025\n\023C2S_QuitRoomRequest\"C\n\024S2C_QuitR"
  "oomResponse\022+\n\007success\030\001 \001(\0132\032.google.pr"
  "otobuf.BoolValue\"+\n\027C2S_InviteFriendRequ"
  "est\022\020\n\010username\030\001 \001(\t\"`\n\030S2C_InviteFrien"
  "dResponse\022+\n\007success\030\001 \001(\0132\032.google.prot"
  "obuf.BoolValue\022\027\n\017invitedUserName\030\002 \001(\t\""
  "B\n\034S2O_InviteFriendNotification\022\020\n\010usern"
  "ame\030\001 \001(\t\022\020\n\010roomCode\030\002 \001(\t\"\026\n\024C2S_Start"
  "GameRequest\"D\n\025S2C_StartGameResponse\022+\n\007"
  "success\030\001 \001(\0132\032.google.protobuf.BoolValu"
  "e\"\024\n\022C2S_EndGameRequest\"B\n\023S2C_EndGameRe"
  "sponse\022+\n\007success\030\001 \001(\0132\032.google.protobu"
  "f.BoolValueb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Protocol_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Protocol_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Protocol_2eproto = {
  false, false, 2419, descriptor_table_protodef_Protocol_2eproto, "Protocol.proto", 
  &descriptor_table_Protocol_2eproto_once, descriptor_table_Protocol_2eproto_deps, 1, 40,
  schemas, file_default_instances, TableStruct_Protocol_2eproto::offsets,
  file_level_metadata_Protocol_2eproto, file_level_enum_descriptors_Protocol_2eproto, file_level_service_descriptors_Protocol_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_Protocol_2eproto_getter() {
  return &descriptor_table_Protocol_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_Protocol_2eproto(&descriptor_table_Protocol_2eproto);
namespace Protocol {

// ===================================================================

class FriendInfo::_Internal {
 public:
};

FriendInfo::FriendInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.FriendInfo)
}
FriendInfo::FriendInfo(const FriendInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:Protocol.FriendInfo)
}

inline void FriendInfo::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
state_ = 0;
}

FriendInfo::~FriendInfo() {
  // @@protoc_insertion_point(destructor:Protocol.FriendInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FriendInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FriendInfo::ArenaDtor(void* object) {
  FriendInfo* _this = reinterpret_cast< FriendInfo* >(object);
  (void)_this;
}
void FriendInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FriendInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FriendInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.FriendInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  state_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FriendInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.FriendInfo.username"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FriendInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.FriendInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.FriendInfo.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  // int32 state = 2;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.FriendInfo)
  return target;
}

size_t FriendInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.FriendInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // int32 state = 2;
  if (this->_internal_state() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FriendInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FriendInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FriendInfo::GetClassData() const { return &_class_data_; }

void FriendInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FriendInfo *>(to)->MergeFrom(
      static_cast<const FriendInfo &>(from));
}


void FriendInfo::MergeFrom(const FriendInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.FriendInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  if (from._internal_state() != 0) {
    _internal_set_state(from._internal_state());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FriendInfo::CopyFrom(const FriendInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.FriendInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendInfo::IsInitialized() const {
  return true;
}

void FriendInfo::InternalSwap(FriendInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
  swap(state_, other->state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FriendInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[0]);
}

// ===================================================================

class S2C_ValidationRequest::_Internal {
 public:
};

S2C_ValidationRequest::S2C_ValidationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_ValidationRequest)
}
S2C_ValidationRequest::S2C_ValidationRequest(const S2C_ValidationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_ValidationRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_ValidationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_ValidationRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata S2C_ValidationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[1]);
}

// ===================================================================

class C2S_ValidationResponse::_Internal {
 public:
};

C2S_ValidationResponse::C2S_ValidationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_ValidationResponse)
}
C2S_ValidationResponse::C2S_ValidationResponse(const C2S_ValidationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_ValidationResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_ValidationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_ValidationResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata C2S_ValidationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[2]);
}

// ===================================================================

class S2C_SessionExpiredNotification::_Internal {
 public:
};

S2C_SessionExpiredNotification::S2C_SessionExpiredNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_SessionExpiredNotification)
}
S2C_SessionExpiredNotification::S2C_SessionExpiredNotification(const S2C_SessionExpiredNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_SessionExpiredNotification)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_SessionExpiredNotification::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_SessionExpiredNotification::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata S2C_SessionExpiredNotification::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[3]);
}

// ===================================================================

class C2S_LoginRequest::_Internal {
 public:
};

C2S_LoginRequest::C2S_LoginRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_LoginRequest)
}
C2S_LoginRequest::C2S_LoginRequest(const C2S_LoginRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_password(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_LoginRequest)
}

inline void C2S_LoginRequest::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_LoginRequest::~C2S_LoginRequest() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_LoginRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void C2S_LoginRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void C2S_LoginRequest::ArenaDtor(void* object) {
  C2S_LoginRequest* _this = reinterpret_cast< C2S_LoginRequest* >(object);
  (void)_this;
}
void C2S_LoginRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void C2S_LoginRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void C2S_LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_LoginRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  password_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_LoginRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2S_LoginRequest.username"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2S_LoginRequest.password"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_LoginRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_LoginRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_LoginRequest.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_LoginRequest.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_LoginRequest)
  return target;
}

size_t C2S_LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_LoginRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_LoginRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    C2S_LoginRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_LoginRequest::GetClassData() const { return &_class_data_; }

void C2S_LoginRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<C2S_LoginRequest *>(to)->MergeFrom(
      static_cast<const C2S_LoginRequest &>(from));
}


void C2S_LoginRequest::MergeFrom(const C2S_LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  if (!from._internal_password().empty()) {
    _internal_set_password(from._internal_password());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_LoginRequest::CopyFrom(const C2S_LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_LoginRequest::IsInitialized() const {
  return true;
}

void C2S_LoginRequest::InternalSwap(C2S_LoginRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &password_, lhs_arena,
      &other->password_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_LoginRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[4]);
}

// ===================================================================

class S2C_LoginResponse::_Internal {
 public:
};

S2C_LoginResponse::S2C_LoginResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  friendlist_(arena),
  pendinglist_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_LoginResponse)
}
S2C_LoginResponse::S2C_LoginResponse(const S2C_LoginResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      friendlist_(from.friendlist_),
      pendinglist_(from.pendinglist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  response_ = from.response_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_LoginResponse)
}

inline void S2C_LoginResponse::SharedCtor() {
response_ = 0;
}

S2C_LoginResponse::~S2C_LoginResponse() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_LoginResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void S2C_LoginResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_LoginResponse::ArenaDtor(void* object) {
  S2C_LoginResponse* _this = reinterpret_cast< S2C_LoginResponse* >(object);
  (void)_this;
}
void S2C_LoginResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S2C_LoginResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S2C_LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_LoginResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friendlist_.Clear();
  pendinglist_.Clear();
  response_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_LoginResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 response = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          response_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .Protocol.FriendInfo friendList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_friendlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .Protocol.FriendInfo pendingList = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pendinglist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_LoginResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_LoginResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 response = 1;
  if (this->_internal_response() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_response(), target);
  }

  // repeated .Protocol.FriendInfo friendList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_friendlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_friendlist(i), target, stream);
  }

  // repeated .Protocol.FriendInfo pendingList = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pendinglist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_pendinglist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_LoginResponse)
  return target;
}

size_t S2C_LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_LoginResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.FriendInfo friendList = 2;
  total_size += 1UL * this->_internal_friendlist_size();
  for (const auto& msg : this->friendlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .Protocol.FriendInfo pendingList = 3;
  total_size += 1UL * this->_internal_pendinglist_size();
  for (const auto& msg : this->pendinglist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 response = 1;
  if (this->_internal_response() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_response());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_LoginResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S2C_LoginResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_LoginResponse::GetClassData() const { return &_class_data_; }

void S2C_LoginResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S2C_LoginResponse *>(to)->MergeFrom(
      static_cast<const S2C_LoginResponse &>(from));
}


void S2C_LoginResponse::MergeFrom(const S2C_LoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  friendlist_.MergeFrom(from.friendlist_);
  pendinglist_.MergeFrom(from.pendinglist_);
  if (from._internal_response() != 0) {
    _internal_set_response(from._internal_response());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_LoginResponse::CopyFrom(const S2C_LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_LoginResponse::IsInitialized() const {
  return true;
}

void S2C_LoginResponse::InternalSwap(S2C_LoginResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  friendlist_.InternalSwap(&other->friendlist_);
  pendinglist_.InternalSwap(&other->pendinglist_);
  swap(response_, other->response_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_LoginResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[5]);
}

// ===================================================================

class C2S_LogoutRequest::_Internal {
 public:
};

C2S_LogoutRequest::C2S_LogoutRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_LogoutRequest)
}
C2S_LogoutRequest::C2S_LogoutRequest(const C2S_LogoutRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_LogoutRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_LogoutRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_LogoutRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata C2S_LogoutRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[6]);
}

// ===================================================================

class S2C_LogoutResponse::_Internal {
 public:
};

S2C_LogoutResponse::S2C_LogoutResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_LogoutResponse)
}
S2C_LogoutResponse::S2C_LogoutResponse(const S2C_LogoutResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_LogoutResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_LogoutResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_LogoutResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata S2C_LogoutResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[7]);
}

// ===================================================================

class C2S_JoinRequest::_Internal {
 public:
};

C2S_JoinRequest::C2S_JoinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_JoinRequest)
}
C2S_JoinRequest::C2S_JoinRequest(const C2S_JoinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_password(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_JoinRequest)
}

inline void C2S_JoinRequest::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_JoinRequest::~C2S_JoinRequest() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_JoinRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void C2S_JoinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void C2S_JoinRequest::ArenaDtor(void* object) {
  C2S_JoinRequest* _this = reinterpret_cast< C2S_JoinRequest* >(object);
  (void)_this;
}
void C2S_JoinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void C2S_JoinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void C2S_JoinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_JoinRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  password_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_JoinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2S_JoinRequest.username"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2S_JoinRequest.password"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_JoinRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_JoinRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_JoinRequest.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_JoinRequest.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_JoinRequest)
  return target;
}

size_t C2S_JoinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_JoinRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_JoinRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    C2S_JoinRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_JoinRequest::GetClassData() const { return &_class_data_; }

void C2S_JoinRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<C2S_JoinRequest *>(to)->MergeFrom(
      static_cast<const C2S_JoinRequest &>(from));
}


void C2S_JoinRequest::MergeFrom(const C2S_JoinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_JoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  if (!from._internal_password().empty()) {
    _internal_set_password(from._internal_password());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_JoinRequest::CopyFrom(const C2S_JoinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_JoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_JoinRequest::IsInitialized() const {
  return true;
}

void C2S_JoinRequest::InternalSwap(C2S_JoinRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &password_, lhs_arena,
      &other->password_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_JoinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[8]);
}

// ===================================================================

class S2C_JoinResponse::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& success(const S2C_JoinResponse* msg);
};

const ::PROTOBUF_NAMESPACE_ID::BoolValue&
S2C_JoinResponse::_Internal::success(const S2C_JoinResponse* msg) {
  return *msg->success_;
}
void S2C_JoinResponse::clear_success() {
  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
}
S2C_JoinResponse::S2C_JoinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_JoinResponse)
}
S2C_JoinResponse::S2C_JoinResponse(const S2C_JoinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_success()) {
    success_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from.success_);
  } else {
    success_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_JoinResponse)
}

inline void S2C_JoinResponse::SharedCtor() {
success_ = nullptr;
}

S2C_JoinResponse::~S2C_JoinResponse() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_JoinResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void S2C_JoinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete success_;
}

void S2C_JoinResponse::ArenaDtor(void* object) {
  S2C_JoinResponse* _this = reinterpret_cast< S2C_JoinResponse* >(object);
  (void)_this;
}
void S2C_JoinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S2C_JoinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S2C_JoinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_JoinResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_JoinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.BoolValue success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_success(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_JoinResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_JoinResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::success(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_JoinResponse)
  return target;
}

size_t S2C_JoinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_JoinResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *success_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_JoinResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S2C_JoinResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_JoinResponse::GetClassData() const { return &_class_data_; }

void S2C_JoinResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S2C_JoinResponse *>(to)->MergeFrom(
      static_cast<const S2C_JoinResponse &>(from));
}


void S2C_JoinResponse::MergeFrom(const S2C_JoinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_JoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_success()) {
    _internal_mutable_success()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_JoinResponse::CopyFrom(const S2C_JoinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_JoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_JoinResponse::IsInitialized() const {
  return true;
}

void S2C_JoinResponse::InternalSwap(S2C_JoinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_JoinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[9]);
}

// ===================================================================

class C2S_FindFriendRequest::_Internal {
 public:
};

C2S_FindFriendRequest::C2S_FindFriendRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_FindFriendRequest)
}
C2S_FindFriendRequest::C2S_FindFriendRequest(const C2S_FindFriendRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_FindFriendRequest)
}

inline void C2S_FindFriendRequest::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_FindFriendRequest::~C2S_FindFriendRequest() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_FindFriendRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void C2S_FindFriendRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void C2S_FindFriendRequest::ArenaDtor(void* object) {
  C2S_FindFriendRequest* _this = reinterpret_cast< C2S_FindFriendRequest* >(object);
  (void)_this;
}
void C2S_FindFriendRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void C2S_FindFriendRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void C2S_FindFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_FindFriendRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_FindFriendRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2S_FindFriendRequest.username"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_FindFriendRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_FindFriendRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_FindFriendRequest.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_FindFriendRequest)
  return target;
}

size_t C2S_FindFriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_FindFriendRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_FindFriendRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    C2S_FindFriendRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_FindFriendRequest::GetClassData() const { return &_class_data_; }

void C2S_FindFriendRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<C2S_FindFriendRequest *>(to)->MergeFrom(
      static_cast<const C2S_FindFriendRequest &>(from));
}


void C2S_FindFriendRequest::MergeFrom(const C2S_FindFriendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_FindFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_FindFriendRequest::CopyFrom(const C2S_FindFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_FindFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_FindFriendRequest::IsInitialized() const {
  return true;
}

void C2S_FindFriendRequest::InternalSwap(C2S_FindFriendRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_FindFriendRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[10]);
}

// ===================================================================

class S2C_FindFriendResponse::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& exist(const S2C_FindFriendResponse* msg);
  static const ::Protocol::FriendInfo& friendinfo(const S2C_FindFriendResponse* msg);
};

const ::PROTOBUF_NAMESPACE_ID::BoolValue&
S2C_FindFriendResponse::_Internal::exist(const S2C_FindFriendResponse* msg) {
  return *msg->exist_;
}
const ::Protocol::FriendInfo&
S2C_FindFriendResponse::_Internal::friendinfo(const S2C_FindFriendResponse* msg) {
  return *msg->friendinfo_;
}
void S2C_FindFriendResponse::clear_exist() {
  if (GetArenaForAllocation() == nullptr && exist_ != nullptr) {
    delete exist_;
  }
  exist_ = nullptr;
}
S2C_FindFriendResponse::S2C_FindFriendResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_FindFriendResponse)
}
S2C_FindFriendResponse::S2C_FindFriendResponse(const S2C_FindFriendResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_exist()) {
    exist_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from.exist_);
  } else {
    exist_ = nullptr;
  }
  if (from._internal_has_friendinfo()) {
    friendinfo_ = new ::Protocol::FriendInfo(*from.friendinfo_);
  } else {
    friendinfo_ = nullptr;
  }
  requeststate_ = from.requeststate_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_FindFriendResponse)
}

inline void S2C_FindFriendResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&exist_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&requeststate_) -
    reinterpret_cast<char*>(&exist_)) + sizeof(requeststate_));
}

S2C_FindFriendResponse::~S2C_FindFriendResponse() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_FindFriendResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void S2C_FindFriendResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete exist_;
  if (this != internal_default_instance()) delete friendinfo_;
}

void S2C_FindFriendResponse::ArenaDtor(void* object) {
  S2C_FindFriendResponse* _this = reinterpret_cast< S2C_FindFriendResponse* >(object);
  (void)_this;
}
void S2C_FindFriendResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S2C_FindFriendResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S2C_FindFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_FindFriendResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && exist_ != nullptr) {
    delete exist_;
  }
  exist_ = nullptr;
  if (GetArenaForAllocation() == nullptr && friendinfo_ != nullptr) {
    delete friendinfo_;
  }
  friendinfo_ = nullptr;
  requeststate_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_FindFriendResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.BoolValue exist = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_exist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.FriendInfo friendInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_friendinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 requestState = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          requeststate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_FindFriendResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_FindFriendResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue exist = 1;
  if (this->_internal_has_exist()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::exist(this), target, stream);
  }

  // .Protocol.FriendInfo friendInfo = 2;
  if (this->_internal_has_friendinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::friendinfo(this), target, stream);
  }

  // int32 requestState = 3;
  if (this->_internal_requeststate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_requeststate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_FindFriendResponse)
  return target;
}

size_t S2C_FindFriendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_FindFriendResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.BoolValue exist = 1;
  if (this->_internal_has_exist()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *exist_);
  }

  // .Protocol.FriendInfo friendInfo = 2;
  if (this->_internal_has_friendinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *friendinfo_);
  }

  // int32 requestState = 3;
  if (this->_internal_requeststate() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_requeststate());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_FindFriendResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S2C_FindFriendResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_FindFriendResponse::GetClassData() const { return &_class_data_; }

void S2C_FindFriendResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S2C_FindFriendResponse *>(to)->MergeFrom(
      static_cast<const S2C_FindFriendResponse &>(from));
}


void S2C_FindFriendResponse::MergeFrom(const S2C_FindFriendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_FindFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_exist()) {
    _internal_mutable_exist()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from._internal_exist());
  }
  if (from._internal_has_friendinfo()) {
    _internal_mutable_friendinfo()->::Protocol::FriendInfo::MergeFrom(from._internal_friendinfo());
  }
  if (from._internal_requeststate() != 0) {
    _internal_set_requeststate(from._internal_requeststate());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_FindFriendResponse::CopyFrom(const S2C_FindFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_FindFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_FindFriendResponse::IsInitialized() const {
  return true;
}

void S2C_FindFriendResponse::InternalSwap(S2C_FindFriendResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_FindFriendResponse, requeststate_)
      + sizeof(S2C_FindFriendResponse::requeststate_)
      - PROTOBUF_FIELD_OFFSET(S2C_FindFriendResponse, exist_)>(
          reinterpret_cast<char*>(&exist_),
          reinterpret_cast<char*>(&other->exist_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_FindFriendResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[11]);
}

// ===================================================================

class C2S_AddFriendRequest::_Internal {
 public:
};

C2S_AddFriendRequest::C2S_AddFriendRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_AddFriendRequest)
}
C2S_AddFriendRequest::C2S_AddFriendRequest(const C2S_AddFriendRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_AddFriendRequest)
}

inline void C2S_AddFriendRequest::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_AddFriendRequest::~C2S_AddFriendRequest() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_AddFriendRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void C2S_AddFriendRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void C2S_AddFriendRequest::ArenaDtor(void* object) {
  C2S_AddFriendRequest* _this = reinterpret_cast< C2S_AddFriendRequest* >(object);
  (void)_this;
}
void C2S_AddFriendRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void C2S_AddFriendRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void C2S_AddFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_AddFriendRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_AddFriendRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2S_AddFriendRequest.username"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_AddFriendRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_AddFriendRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_AddFriendRequest.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_AddFriendRequest)
  return target;
}

size_t C2S_AddFriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_AddFriendRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_AddFriendRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    C2S_AddFriendRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_AddFriendRequest::GetClassData() const { return &_class_data_; }

void C2S_AddFriendRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<C2S_AddFriendRequest *>(to)->MergeFrom(
      static_cast<const C2S_AddFriendRequest &>(from));
}


void C2S_AddFriendRequest::MergeFrom(const C2S_AddFriendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_AddFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_AddFriendRequest::CopyFrom(const C2S_AddFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_AddFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_AddFriendRequest::IsInitialized() const {
  return true;
}

void C2S_AddFriendRequest::InternalSwap(C2S_AddFriendRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_AddFriendRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[12]);
}

// ===================================================================

class S2C_AddFriendResponse::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& success(const S2C_AddFriendResponse* msg);
};

const ::PROTOBUF_NAMESPACE_ID::BoolValue&
S2C_AddFriendResponse::_Internal::success(const S2C_AddFriendResponse* msg) {
  return *msg->success_;
}
void S2C_AddFriendResponse::clear_success() {
  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
}
S2C_AddFriendResponse::S2C_AddFriendResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_AddFriendResponse)
}
S2C_AddFriendResponse::S2C_AddFriendResponse(const S2C_AddFriendResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_success()) {
    success_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from.success_);
  } else {
    success_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_AddFriendResponse)
}

inline void S2C_AddFriendResponse::SharedCtor() {
success_ = nullptr;
}

S2C_AddFriendResponse::~S2C_AddFriendResponse() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_AddFriendResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void S2C_AddFriendResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete success_;
}

void S2C_AddFriendResponse::ArenaDtor(void* object) {
  S2C_AddFriendResponse* _this = reinterpret_cast< S2C_AddFriendResponse* >(object);
  (void)_this;
}
void S2C_AddFriendResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S2C_AddFriendResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S2C_AddFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_AddFriendResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_AddFriendResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.BoolValue success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_success(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_AddFriendResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_AddFriendResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::success(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_AddFriendResponse)
  return target;
}

size_t S2C_AddFriendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_AddFriendResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *success_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_AddFriendResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S2C_AddFriendResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_AddFriendResponse::GetClassData() const { return &_class_data_; }

void S2C_AddFriendResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S2C_AddFriendResponse *>(to)->MergeFrom(
      static_cast<const S2C_AddFriendResponse &>(from));
}


void S2C_AddFriendResponse::MergeFrom(const S2C_AddFriendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_AddFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_success()) {
    _internal_mutable_success()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_AddFriendResponse::CopyFrom(const S2C_AddFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_AddFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_AddFriendResponse::IsInitialized() const {
  return true;
}

void S2C_AddFriendResponse::InternalSwap(S2C_AddFriendResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_AddFriendResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[13]);
}

// ===================================================================

class S2O_AddFriendNotification::_Internal {
 public:
};

S2O_AddFriendNotification::S2O_AddFriendNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.S2O_AddFriendNotification)
}
S2O_AddFriendNotification::S2O_AddFriendNotification(const S2O_AddFriendNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S2O_AddFriendNotification)
}

inline void S2O_AddFriendNotification::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

S2O_AddFriendNotification::~S2O_AddFriendNotification() {
  // @@protoc_insertion_point(destructor:Protocol.S2O_AddFriendNotification)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void S2O_AddFriendNotification::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void S2O_AddFriendNotification::ArenaDtor(void* object) {
  S2O_AddFriendNotification* _this = reinterpret_cast< S2O_AddFriendNotification* >(object);
  (void)_this;
}
void S2O_AddFriendNotification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S2O_AddFriendNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S2O_AddFriendNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2O_AddFriendNotification)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2O_AddFriendNotification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.S2O_AddFriendNotification.username"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2O_AddFriendNotification::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2O_AddFriendNotification)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S2O_AddFriendNotification.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2O_AddFriendNotification)
  return target;
}

size_t S2O_AddFriendNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2O_AddFriendNotification)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2O_AddFriendNotification::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S2O_AddFriendNotification::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2O_AddFriendNotification::GetClassData() const { return &_class_data_; }

void S2O_AddFriendNotification::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S2O_AddFriendNotification *>(to)->MergeFrom(
      static_cast<const S2O_AddFriendNotification &>(from));
}


void S2O_AddFriendNotification::MergeFrom(const S2O_AddFriendNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2O_AddFriendNotification)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2O_AddFriendNotification::CopyFrom(const S2O_AddFriendNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2O_AddFriendNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2O_AddFriendNotification::IsInitialized() const {
  return true;
}

void S2O_AddFriendNotification::InternalSwap(S2O_AddFriendNotification* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata S2O_AddFriendNotification::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[14]);
}

// ===================================================================

class C2S_CancelAddFriendRequest::_Internal {
 public:
};

C2S_CancelAddFriendRequest::C2S_CancelAddFriendRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_CancelAddFriendRequest)
}
C2S_CancelAddFriendRequest::C2S_CancelAddFriendRequest(const C2S_CancelAddFriendRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_CancelAddFriendRequest)
}

inline void C2S_CancelAddFriendRequest::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_CancelAddFriendRequest::~C2S_CancelAddFriendRequest() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_CancelAddFriendRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void C2S_CancelAddFriendRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void C2S_CancelAddFriendRequest::ArenaDtor(void* object) {
  C2S_CancelAddFriendRequest* _this = reinterpret_cast< C2S_CancelAddFriendRequest* >(object);
  (void)_this;
}
void C2S_CancelAddFriendRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void C2S_CancelAddFriendRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void C2S_CancelAddFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_CancelAddFriendRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_CancelAddFriendRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2S_CancelAddFriendRequest.username"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_CancelAddFriendRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_CancelAddFriendRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_CancelAddFriendRequest.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_CancelAddFriendRequest)
  return target;
}

size_t C2S_CancelAddFriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_CancelAddFriendRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_CancelAddFriendRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    C2S_CancelAddFriendRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_CancelAddFriendRequest::GetClassData() const { return &_class_data_; }

void C2S_CancelAddFriendRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<C2S_CancelAddFriendRequest *>(to)->MergeFrom(
      static_cast<const C2S_CancelAddFriendRequest &>(from));
}


void C2S_CancelAddFriendRequest::MergeFrom(const C2S_CancelAddFriendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_CancelAddFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_CancelAddFriendRequest::CopyFrom(const C2S_CancelAddFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_CancelAddFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_CancelAddFriendRequest::IsInitialized() const {
  return true;
}

void C2S_CancelAddFriendRequest::InternalSwap(C2S_CancelAddFriendRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_CancelAddFriendRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[15]);
}

// ===================================================================

class S2C_CancelAddFriendResponse::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& success(const S2C_CancelAddFriendResponse* msg);
};

const ::PROTOBUF_NAMESPACE_ID::BoolValue&
S2C_CancelAddFriendResponse::_Internal::success(const S2C_CancelAddFriendResponse* msg) {
  return *msg->success_;
}
void S2C_CancelAddFriendResponse::clear_success() {
  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
}
S2C_CancelAddFriendResponse::S2C_CancelAddFriendResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_CancelAddFriendResponse)
}
S2C_CancelAddFriendResponse::S2C_CancelAddFriendResponse(const S2C_CancelAddFriendResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_success()) {
    success_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from.success_);
  } else {
    success_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_CancelAddFriendResponse)
}

inline void S2C_CancelAddFriendResponse::SharedCtor() {
success_ = nullptr;
}

S2C_CancelAddFriendResponse::~S2C_CancelAddFriendResponse() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_CancelAddFriendResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void S2C_CancelAddFriendResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete success_;
}

void S2C_CancelAddFriendResponse::ArenaDtor(void* object) {
  S2C_CancelAddFriendResponse* _this = reinterpret_cast< S2C_CancelAddFriendResponse* >(object);
  (void)_this;
}
void S2C_CancelAddFriendResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S2C_CancelAddFriendResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S2C_CancelAddFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_CancelAddFriendResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_CancelAddFriendResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.BoolValue success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_success(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_CancelAddFriendResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_CancelAddFriendResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::success(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_CancelAddFriendResponse)
  return target;
}

size_t S2C_CancelAddFriendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_CancelAddFriendResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *success_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_CancelAddFriendResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S2C_CancelAddFriendResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_CancelAddFriendResponse::GetClassData() const { return &_class_data_; }

void S2C_CancelAddFriendResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S2C_CancelAddFriendResponse *>(to)->MergeFrom(
      static_cast<const S2C_CancelAddFriendResponse &>(from));
}


void S2C_CancelAddFriendResponse::MergeFrom(const S2C_CancelAddFriendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_CancelAddFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_success()) {
    _internal_mutable_success()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_CancelAddFriendResponse::CopyFrom(const S2C_CancelAddFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_CancelAddFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_CancelAddFriendResponse::IsInitialized() const {
  return true;
}

void S2C_CancelAddFriendResponse::InternalSwap(S2C_CancelAddFriendResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_CancelAddFriendResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[16]);
}

// ===================================================================

class S2O_CancelAddFriendNotification::_Internal {
 public:
};

S2O_CancelAddFriendNotification::S2O_CancelAddFriendNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.S2O_CancelAddFriendNotification)
}
S2O_CancelAddFriendNotification::S2O_CancelAddFriendNotification(const S2O_CancelAddFriendNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S2O_CancelAddFriendNotification)
}

inline void S2O_CancelAddFriendNotification::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

S2O_CancelAddFriendNotification::~S2O_CancelAddFriendNotification() {
  // @@protoc_insertion_point(destructor:Protocol.S2O_CancelAddFriendNotification)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void S2O_CancelAddFriendNotification::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void S2O_CancelAddFriendNotification::ArenaDtor(void* object) {
  S2O_CancelAddFriendNotification* _this = reinterpret_cast< S2O_CancelAddFriendNotification* >(object);
  (void)_this;
}
void S2O_CancelAddFriendNotification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S2O_CancelAddFriendNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S2O_CancelAddFriendNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2O_CancelAddFriendNotification)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2O_CancelAddFriendNotification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.S2O_CancelAddFriendNotification.username"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2O_CancelAddFriendNotification::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2O_CancelAddFriendNotification)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S2O_CancelAddFriendNotification.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2O_CancelAddFriendNotification)
  return target;
}

size_t S2O_CancelAddFriendNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2O_CancelAddFriendNotification)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2O_CancelAddFriendNotification::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S2O_CancelAddFriendNotification::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2O_CancelAddFriendNotification::GetClassData() const { return &_class_data_; }

void S2O_CancelAddFriendNotification::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S2O_CancelAddFriendNotification *>(to)->MergeFrom(
      static_cast<const S2O_CancelAddFriendNotification &>(from));
}


void S2O_CancelAddFriendNotification::MergeFrom(const S2O_CancelAddFriendNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2O_CancelAddFriendNotification)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2O_CancelAddFriendNotification::CopyFrom(const S2O_CancelAddFriendNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2O_CancelAddFriendNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2O_CancelAddFriendNotification::IsInitialized() const {
  return true;
}

void S2O_CancelAddFriendNotification::InternalSwap(S2O_CancelAddFriendNotification* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata S2O_CancelAddFriendNotification::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[17]);
}

// ===================================================================

class C2S_AcceptFriendRequest::_Internal {
 public:
};

C2S_AcceptFriendRequest::C2S_AcceptFriendRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_AcceptFriendRequest)
}
C2S_AcceptFriendRequest::C2S_AcceptFriendRequest(const C2S_AcceptFriendRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  acceptedusername_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    acceptedusername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_acceptedusername().empty()) {
    acceptedusername_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_acceptedusername(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_AcceptFriendRequest)
}

inline void C2S_AcceptFriendRequest::SharedCtor() {
acceptedusername_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  acceptedusername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_AcceptFriendRequest::~C2S_AcceptFriendRequest() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_AcceptFriendRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void C2S_AcceptFriendRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  acceptedusername_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void C2S_AcceptFriendRequest::ArenaDtor(void* object) {
  C2S_AcceptFriendRequest* _this = reinterpret_cast< C2S_AcceptFriendRequest* >(object);
  (void)_this;
}
void C2S_AcceptFriendRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void C2S_AcceptFriendRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void C2S_AcceptFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_AcceptFriendRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  acceptedusername_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_AcceptFriendRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string acceptedUsername = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_acceptedusername();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2S_AcceptFriendRequest.acceptedUsername"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_AcceptFriendRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_AcceptFriendRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string acceptedUsername = 1;
  if (!this->_internal_acceptedusername().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_acceptedusername().data(), static_cast<int>(this->_internal_acceptedusername().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_AcceptFriendRequest.acceptedUsername");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_acceptedusername(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_AcceptFriendRequest)
  return target;
}

size_t C2S_AcceptFriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_AcceptFriendRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string acceptedUsername = 1;
  if (!this->_internal_acceptedusername().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_acceptedusername());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_AcceptFriendRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    C2S_AcceptFriendRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_AcceptFriendRequest::GetClassData() const { return &_class_data_; }

void C2S_AcceptFriendRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<C2S_AcceptFriendRequest *>(to)->MergeFrom(
      static_cast<const C2S_AcceptFriendRequest &>(from));
}


void C2S_AcceptFriendRequest::MergeFrom(const C2S_AcceptFriendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_AcceptFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_acceptedusername().empty()) {
    _internal_set_acceptedusername(from._internal_acceptedusername());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_AcceptFriendRequest::CopyFrom(const C2S_AcceptFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_AcceptFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_AcceptFriendRequest::IsInitialized() const {
  return true;
}

void C2S_AcceptFriendRequest::InternalSwap(C2S_AcceptFriendRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &acceptedusername_, lhs_arena,
      &other->acceptedusername_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_AcceptFriendRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[18]);
}

// ===================================================================

class S2C_AcceptFriendResponse::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& success(const S2C_AcceptFriendResponse* msg);
  static const ::Protocol::FriendInfo& newfriendinfo(const S2C_AcceptFriendResponse* msg);
};

const ::PROTOBUF_NAMESPACE_ID::BoolValue&
S2C_AcceptFriendResponse::_Internal::success(const S2C_AcceptFriendResponse* msg) {
  return *msg->success_;
}
const ::Protocol::FriendInfo&
S2C_AcceptFriendResponse::_Internal::newfriendinfo(const S2C_AcceptFriendResponse* msg) {
  return *msg->newfriendinfo_;
}
void S2C_AcceptFriendResponse::clear_success() {
  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
}
S2C_AcceptFriendResponse::S2C_AcceptFriendResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_AcceptFriendResponse)
}
S2C_AcceptFriendResponse::S2C_AcceptFriendResponse(const S2C_AcceptFriendResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_success()) {
    success_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from.success_);
  } else {
    success_ = nullptr;
  }
  if (from._internal_has_newfriendinfo()) {
    newfriendinfo_ = new ::Protocol::FriendInfo(*from.newfriendinfo_);
  } else {
    newfriendinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_AcceptFriendResponse)
}

inline void S2C_AcceptFriendResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&success_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&newfriendinfo_) -
    reinterpret_cast<char*>(&success_)) + sizeof(newfriendinfo_));
}

S2C_AcceptFriendResponse::~S2C_AcceptFriendResponse() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_AcceptFriendResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void S2C_AcceptFriendResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete success_;
  if (this != internal_default_instance()) delete newfriendinfo_;
}

void S2C_AcceptFriendResponse::ArenaDtor(void* object) {
  S2C_AcceptFriendResponse* _this = reinterpret_cast< S2C_AcceptFriendResponse* >(object);
  (void)_this;
}
void S2C_AcceptFriendResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S2C_AcceptFriendResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S2C_AcceptFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_AcceptFriendResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
  if (GetArenaForAllocation() == nullptr && newfriendinfo_ != nullptr) {
    delete newfriendinfo_;
  }
  newfriendinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_AcceptFriendResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.BoolValue success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_success(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.FriendInfo newFriendInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_newfriendinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_AcceptFriendResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_AcceptFriendResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::success(this), target, stream);
  }

  // .Protocol.FriendInfo newFriendInfo = 2;
  if (this->_internal_has_newfriendinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::newfriendinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_AcceptFriendResponse)
  return target;
}

size_t S2C_AcceptFriendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_AcceptFriendResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *success_);
  }

  // .Protocol.FriendInfo newFriendInfo = 2;
  if (this->_internal_has_newfriendinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *newfriendinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_AcceptFriendResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S2C_AcceptFriendResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_AcceptFriendResponse::GetClassData() const { return &_class_data_; }

void S2C_AcceptFriendResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S2C_AcceptFriendResponse *>(to)->MergeFrom(
      static_cast<const S2C_AcceptFriendResponse &>(from));
}


void S2C_AcceptFriendResponse::MergeFrom(const S2C_AcceptFriendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_AcceptFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_success()) {
    _internal_mutable_success()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from._internal_success());
  }
  if (from._internal_has_newfriendinfo()) {
    _internal_mutable_newfriendinfo()->::Protocol::FriendInfo::MergeFrom(from._internal_newfriendinfo());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_AcceptFriendResponse::CopyFrom(const S2C_AcceptFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_AcceptFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_AcceptFriendResponse::IsInitialized() const {
  return true;
}

void S2C_AcceptFriendResponse::InternalSwap(S2C_AcceptFriendResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_AcceptFriendResponse, newfriendinfo_)
      + sizeof(S2C_AcceptFriendResponse::newfriendinfo_)
      - PROTOBUF_FIELD_OFFSET(S2C_AcceptFriendResponse, success_)>(
          reinterpret_cast<char*>(&success_),
          reinterpret_cast<char*>(&other->success_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_AcceptFriendResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[19]);
}

// ===================================================================

class S2O_AcceptFriendNotification::_Internal {
 public:
  static const ::Protocol::FriendInfo& newfriendinfo(const S2O_AcceptFriendNotification* msg);
};

const ::Protocol::FriendInfo&
S2O_AcceptFriendNotification::_Internal::newfriendinfo(const S2O_AcceptFriendNotification* msg) {
  return *msg->newfriendinfo_;
}
S2O_AcceptFriendNotification::S2O_AcceptFriendNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.S2O_AcceptFriendNotification)
}
S2O_AcceptFriendNotification::S2O_AcceptFriendNotification(const S2O_AcceptFriendNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_newfriendinfo()) {
    newfriendinfo_ = new ::Protocol::FriendInfo(*from.newfriendinfo_);
  } else {
    newfriendinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S2O_AcceptFriendNotification)
}

inline void S2O_AcceptFriendNotification::SharedCtor() {
newfriendinfo_ = nullptr;
}

S2O_AcceptFriendNotification::~S2O_AcceptFriendNotification() {
  // @@protoc_insertion_point(destructor:Protocol.S2O_AcceptFriendNotification)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void S2O_AcceptFriendNotification::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete newfriendinfo_;
}

void S2O_AcceptFriendNotification::ArenaDtor(void* object) {
  S2O_AcceptFriendNotification* _this = reinterpret_cast< S2O_AcceptFriendNotification* >(object);
  (void)_this;
}
void S2O_AcceptFriendNotification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S2O_AcceptFriendNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S2O_AcceptFriendNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2O_AcceptFriendNotification)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && newfriendinfo_ != nullptr) {
    delete newfriendinfo_;
  }
  newfriendinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2O_AcceptFriendNotification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.FriendInfo newFriendInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_newfriendinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2O_AcceptFriendNotification::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2O_AcceptFriendNotification)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.FriendInfo newFriendInfo = 1;
  if (this->_internal_has_newfriendinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::newfriendinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2O_AcceptFriendNotification)
  return target;
}

size_t S2O_AcceptFriendNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2O_AcceptFriendNotification)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.FriendInfo newFriendInfo = 1;
  if (this->_internal_has_newfriendinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *newfriendinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2O_AcceptFriendNotification::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S2O_AcceptFriendNotification::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2O_AcceptFriendNotification::GetClassData() const { return &_class_data_; }

void S2O_AcceptFriendNotification::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S2O_AcceptFriendNotification *>(to)->MergeFrom(
      static_cast<const S2O_AcceptFriendNotification &>(from));
}


void S2O_AcceptFriendNotification::MergeFrom(const S2O_AcceptFriendNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2O_AcceptFriendNotification)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_newfriendinfo()) {
    _internal_mutable_newfriendinfo()->::Protocol::FriendInfo::MergeFrom(from._internal_newfriendinfo());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2O_AcceptFriendNotification::CopyFrom(const S2O_AcceptFriendNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2O_AcceptFriendNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2O_AcceptFriendNotification::IsInitialized() const {
  return true;
}

void S2O_AcceptFriendNotification::InternalSwap(S2O_AcceptFriendNotification* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(newfriendinfo_, other->newfriendinfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2O_AcceptFriendNotification::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[20]);
}

// ===================================================================

class C2S_RefuseFriendRequest::_Internal {
 public:
};

C2S_RefuseFriendRequest::C2S_RefuseFriendRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_RefuseFriendRequest)
}
C2S_RefuseFriendRequest::C2S_RefuseFriendRequest(const C2S_RefuseFriendRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  refusedusername_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    refusedusername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_refusedusername().empty()) {
    refusedusername_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_refusedusername(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_RefuseFriendRequest)
}

inline void C2S_RefuseFriendRequest::SharedCtor() {
refusedusername_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  refusedusername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_RefuseFriendRequest::~C2S_RefuseFriendRequest() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_RefuseFriendRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void C2S_RefuseFriendRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  refusedusername_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void C2S_RefuseFriendRequest::ArenaDtor(void* object) {
  C2S_RefuseFriendRequest* _this = reinterpret_cast< C2S_RefuseFriendRequest* >(object);
  (void)_this;
}
void C2S_RefuseFriendRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void C2S_RefuseFriendRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void C2S_RefuseFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_RefuseFriendRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  refusedusername_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_RefuseFriendRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string refusedUsername = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_refusedusername();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2S_RefuseFriendRequest.refusedUsername"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_RefuseFriendRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_RefuseFriendRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string refusedUsername = 1;
  if (!this->_internal_refusedusername().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_refusedusername().data(), static_cast<int>(this->_internal_refusedusername().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_RefuseFriendRequest.refusedUsername");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_refusedusername(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_RefuseFriendRequest)
  return target;
}

size_t C2S_RefuseFriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_RefuseFriendRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string refusedUsername = 1;
  if (!this->_internal_refusedusername().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_refusedusername());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_RefuseFriendRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    C2S_RefuseFriendRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_RefuseFriendRequest::GetClassData() const { return &_class_data_; }

void C2S_RefuseFriendRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<C2S_RefuseFriendRequest *>(to)->MergeFrom(
      static_cast<const C2S_RefuseFriendRequest &>(from));
}


void C2S_RefuseFriendRequest::MergeFrom(const C2S_RefuseFriendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_RefuseFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_refusedusername().empty()) {
    _internal_set_refusedusername(from._internal_refusedusername());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_RefuseFriendRequest::CopyFrom(const C2S_RefuseFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_RefuseFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_RefuseFriendRequest::IsInitialized() const {
  return true;
}

void C2S_RefuseFriendRequest::InternalSwap(C2S_RefuseFriendRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &refusedusername_, lhs_arena,
      &other->refusedusername_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_RefuseFriendRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[21]);
}

// ===================================================================

class S2C_RefuseFriendResponse::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& success(const S2C_RefuseFriendResponse* msg);
};

const ::PROTOBUF_NAMESPACE_ID::BoolValue&
S2C_RefuseFriendResponse::_Internal::success(const S2C_RefuseFriendResponse* msg) {
  return *msg->success_;
}
void S2C_RefuseFriendResponse::clear_success() {
  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
}
S2C_RefuseFriendResponse::S2C_RefuseFriendResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_RefuseFriendResponse)
}
S2C_RefuseFriendResponse::S2C_RefuseFriendResponse(const S2C_RefuseFriendResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  refusedusername_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    refusedusername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_refusedusername().empty()) {
    refusedusername_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_refusedusername(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_success()) {
    success_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from.success_);
  } else {
    success_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_RefuseFriendResponse)
}

inline void S2C_RefuseFriendResponse::SharedCtor() {
refusedusername_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  refusedusername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
success_ = nullptr;
}

S2C_RefuseFriendResponse::~S2C_RefuseFriendResponse() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_RefuseFriendResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void S2C_RefuseFriendResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  refusedusername_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete success_;
}

void S2C_RefuseFriendResponse::ArenaDtor(void* object) {
  S2C_RefuseFriendResponse* _this = reinterpret_cast< S2C_RefuseFriendResponse* >(object);
  (void)_this;
}
void S2C_RefuseFriendResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S2C_RefuseFriendResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S2C_RefuseFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_RefuseFriendResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  refusedusername_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_RefuseFriendResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.BoolValue success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_success(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string refusedUsername = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_refusedusername();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.S2C_RefuseFriendResponse.refusedUsername"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_RefuseFriendResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_RefuseFriendResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::success(this), target, stream);
  }

  // string refusedUsername = 2;
  if (!this->_internal_refusedusername().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_refusedusername().data(), static_cast<int>(this->_internal_refusedusername().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S2C_RefuseFriendResponse.refusedUsername");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_refusedusername(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_RefuseFriendResponse)
  return target;
}

size_t S2C_RefuseFriendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_RefuseFriendResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string refusedUsername = 2;
  if (!this->_internal_refusedusername().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_refusedusername());
  }

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *success_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_RefuseFriendResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S2C_RefuseFriendResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_RefuseFriendResponse::GetClassData() const { return &_class_data_; }

void S2C_RefuseFriendResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S2C_RefuseFriendResponse *>(to)->MergeFrom(
      static_cast<const S2C_RefuseFriendResponse &>(from));
}


void S2C_RefuseFriendResponse::MergeFrom(const S2C_RefuseFriendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_RefuseFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_refusedusername().empty()) {
    _internal_set_refusedusername(from._internal_refusedusername());
  }
  if (from._internal_has_success()) {
    _internal_mutable_success()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_RefuseFriendResponse::CopyFrom(const S2C_RefuseFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_RefuseFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_RefuseFriendResponse::IsInitialized() const {
  return true;
}

void S2C_RefuseFriendResponse::InternalSwap(S2C_RefuseFriendResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &refusedusername_, lhs_arena,
      &other->refusedusername_, rhs_arena
  );
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_RefuseFriendResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[22]);
}

// ===================================================================

class C2S_DelFriendRequest::_Internal {
 public:
};

C2S_DelFriendRequest::C2S_DelFriendRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_DelFriendRequest)
}
C2S_DelFriendRequest::C2S_DelFriendRequest(const C2S_DelFriendRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  friendname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    friendname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_friendname().empty()) {
    friendname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_friendname(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_DelFriendRequest)
}

inline void C2S_DelFriendRequest::SharedCtor() {
friendname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  friendname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_DelFriendRequest::~C2S_DelFriendRequest() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_DelFriendRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void C2S_DelFriendRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  friendname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void C2S_DelFriendRequest::ArenaDtor(void* object) {
  C2S_DelFriendRequest* _this = reinterpret_cast< C2S_DelFriendRequest* >(object);
  (void)_this;
}
void C2S_DelFriendRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void C2S_DelFriendRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void C2S_DelFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_DelFriendRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friendname_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_DelFriendRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string friendName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_friendname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2S_DelFriendRequest.friendName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_DelFriendRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_DelFriendRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string friendName = 1;
  if (!this->_internal_friendname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_friendname().data(), static_cast<int>(this->_internal_friendname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_DelFriendRequest.friendName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_friendname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_DelFriendRequest)
  return target;
}

size_t C2S_DelFriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_DelFriendRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string friendName = 1;
  if (!this->_internal_friendname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_friendname());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_DelFriendRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    C2S_DelFriendRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_DelFriendRequest::GetClassData() const { return &_class_data_; }

void C2S_DelFriendRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<C2S_DelFriendRequest *>(to)->MergeFrom(
      static_cast<const C2S_DelFriendRequest &>(from));
}


void C2S_DelFriendRequest::MergeFrom(const C2S_DelFriendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_DelFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_friendname().empty()) {
    _internal_set_friendname(from._internal_friendname());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_DelFriendRequest::CopyFrom(const C2S_DelFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_DelFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_DelFriendRequest::IsInitialized() const {
  return true;
}

void C2S_DelFriendRequest::InternalSwap(C2S_DelFriendRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &friendname_, lhs_arena,
      &other->friendname_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_DelFriendRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[23]);
}

// ===================================================================

class S2C_DelFriendResponse::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& success(const S2C_DelFriendResponse* msg);
};

const ::PROTOBUF_NAMESPACE_ID::BoolValue&
S2C_DelFriendResponse::_Internal::success(const S2C_DelFriendResponse* msg) {
  return *msg->success_;
}
void S2C_DelFriendResponse::clear_success() {
  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
}
S2C_DelFriendResponse::S2C_DelFriendResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_DelFriendResponse)
}
S2C_DelFriendResponse::S2C_DelFriendResponse(const S2C_DelFriendResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  delfriendname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    delfriendname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delfriendname().empty()) {
    delfriendname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_delfriendname(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_success()) {
    success_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from.success_);
  } else {
    success_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_DelFriendResponse)
}

inline void S2C_DelFriendResponse::SharedCtor() {
delfriendname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  delfriendname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
success_ = nullptr;
}

S2C_DelFriendResponse::~S2C_DelFriendResponse() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_DelFriendResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void S2C_DelFriendResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  delfriendname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete success_;
}

void S2C_DelFriendResponse::ArenaDtor(void* object) {
  S2C_DelFriendResponse* _this = reinterpret_cast< S2C_DelFriendResponse* >(object);
  (void)_this;
}
void S2C_DelFriendResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S2C_DelFriendResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S2C_DelFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_DelFriendResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delfriendname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_DelFriendResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.BoolValue success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_success(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string delFriendName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_delfriendname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.S2C_DelFriendResponse.delFriendName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_DelFriendResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_DelFriendResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::success(this), target, stream);
  }

  // string delFriendName = 2;
  if (!this->_internal_delfriendname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_delfriendname().data(), static_cast<int>(this->_internal_delfriendname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S2C_DelFriendResponse.delFriendName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_delfriendname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_DelFriendResponse)
  return target;
}

size_t S2C_DelFriendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_DelFriendResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delFriendName = 2;
  if (!this->_internal_delfriendname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_delfriendname());
  }

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *success_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_DelFriendResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S2C_DelFriendResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_DelFriendResponse::GetClassData() const { return &_class_data_; }

void S2C_DelFriendResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S2C_DelFriendResponse *>(to)->MergeFrom(
      static_cast<const S2C_DelFriendResponse &>(from));
}


void S2C_DelFriendResponse::MergeFrom(const S2C_DelFriendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_DelFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delfriendname().empty()) {
    _internal_set_delfriendname(from._internal_delfriendname());
  }
  if (from._internal_has_success()) {
    _internal_mutable_success()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_DelFriendResponse::CopyFrom(const S2C_DelFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_DelFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_DelFriendResponse::IsInitialized() const {
  return true;
}

void S2C_DelFriendResponse::InternalSwap(S2C_DelFriendResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &delfriendname_, lhs_arena,
      &other->delfriendname_, rhs_arena
  );
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_DelFriendResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[24]);
}

// ===================================================================

class S2O_DelFriendNotification::_Internal {
 public:
};

S2O_DelFriendNotification::S2O_DelFriendNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.S2O_DelFriendNotification)
}
S2O_DelFriendNotification::S2O_DelFriendNotification(const S2O_DelFriendNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  delfriendname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    delfriendname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delfriendname().empty()) {
    delfriendname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_delfriendname(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S2O_DelFriendNotification)
}

inline void S2O_DelFriendNotification::SharedCtor() {
delfriendname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  delfriendname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

S2O_DelFriendNotification::~S2O_DelFriendNotification() {
  // @@protoc_insertion_point(destructor:Protocol.S2O_DelFriendNotification)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void S2O_DelFriendNotification::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  delfriendname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void S2O_DelFriendNotification::ArenaDtor(void* object) {
  S2O_DelFriendNotification* _this = reinterpret_cast< S2O_DelFriendNotification* >(object);
  (void)_this;
}
void S2O_DelFriendNotification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S2O_DelFriendNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S2O_DelFriendNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2O_DelFriendNotification)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delfriendname_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2O_DelFriendNotification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delFriendName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delfriendname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.S2O_DelFriendNotification.delFriendName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2O_DelFriendNotification::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2O_DelFriendNotification)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delFriendName = 1;
  if (!this->_internal_delfriendname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_delfriendname().data(), static_cast<int>(this->_internal_delfriendname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S2O_DelFriendNotification.delFriendName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_delfriendname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2O_DelFriendNotification)
  return target;
}

size_t S2O_DelFriendNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2O_DelFriendNotification)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delFriendName = 1;
  if (!this->_internal_delfriendname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_delfriendname());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2O_DelFriendNotification::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S2O_DelFriendNotification::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2O_DelFriendNotification::GetClassData() const { return &_class_data_; }

void S2O_DelFriendNotification::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S2O_DelFriendNotification *>(to)->MergeFrom(
      static_cast<const S2O_DelFriendNotification &>(from));
}


void S2O_DelFriendNotification::MergeFrom(const S2O_DelFriendNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2O_DelFriendNotification)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delfriendname().empty()) {
    _internal_set_delfriendname(from._internal_delfriendname());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2O_DelFriendNotification::CopyFrom(const S2O_DelFriendNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2O_DelFriendNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2O_DelFriendNotification::IsInitialized() const {
  return true;
}

void S2O_DelFriendNotification::InternalSwap(S2O_DelFriendNotification* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &delfriendname_, lhs_arena,
      &other->delfriendname_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata S2O_DelFriendNotification::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[25]);
}

// ===================================================================

class S2O_UpdateStateNotification::_Internal {
 public:
  static const ::Protocol::FriendInfo& friendinfo(const S2O_UpdateStateNotification* msg);
};

const ::Protocol::FriendInfo&
S2O_UpdateStateNotification::_Internal::friendinfo(const S2O_UpdateStateNotification* msg) {
  return *msg->friendinfo_;
}
S2O_UpdateStateNotification::S2O_UpdateStateNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.S2O_UpdateStateNotification)
}
S2O_UpdateStateNotification::S2O_UpdateStateNotification(const S2O_UpdateStateNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_friendinfo()) {
    friendinfo_ = new ::Protocol::FriendInfo(*from.friendinfo_);
  } else {
    friendinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S2O_UpdateStateNotification)
}

inline void S2O_UpdateStateNotification::SharedCtor() {
friendinfo_ = nullptr;
}

S2O_UpdateStateNotification::~S2O_UpdateStateNotification() {
  // @@protoc_insertion_point(destructor:Protocol.S2O_UpdateStateNotification)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void S2O_UpdateStateNotification::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete friendinfo_;
}

void S2O_UpdateStateNotification::ArenaDtor(void* object) {
  S2O_UpdateStateNotification* _this = reinterpret_cast< S2O_UpdateStateNotification* >(object);
  (void)_this;
}
void S2O_UpdateStateNotification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S2O_UpdateStateNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S2O_UpdateStateNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2O_UpdateStateNotification)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && friendinfo_ != nullptr) {
    delete friendinfo_;
  }
  friendinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2O_UpdateStateNotification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.FriendInfo friendInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_friendinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2O_UpdateStateNotification::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2O_UpdateStateNotification)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.FriendInfo friendInfo = 1;
  if (this->_internal_has_friendinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::friendinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2O_UpdateStateNotification)
  return target;
}

size_t S2O_UpdateStateNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2O_UpdateStateNotification)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.FriendInfo friendInfo = 1;
  if (this->_internal_has_friendinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *friendinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2O_UpdateStateNotification::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S2O_UpdateStateNotification::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2O_UpdateStateNotification::GetClassData() const { return &_class_data_; }

void S2O_UpdateStateNotification::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S2O_UpdateStateNotification *>(to)->MergeFrom(
      static_cast<const S2O_UpdateStateNotification &>(from));
}


void S2O_UpdateStateNotification::MergeFrom(const S2O_UpdateStateNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2O_UpdateStateNotification)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_friendinfo()) {
    _internal_mutable_friendinfo()->::Protocol::FriendInfo::MergeFrom(from._internal_friendinfo());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2O_UpdateStateNotification::CopyFrom(const S2O_UpdateStateNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2O_UpdateStateNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2O_UpdateStateNotification::IsInitialized() const {
  return true;
}

void S2O_UpdateStateNotification::InternalSwap(S2O_UpdateStateNotification* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(friendinfo_, other->friendinfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2O_UpdateStateNotification::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[26]);
}

// ===================================================================

class C2S_CreateRoomRequest::_Internal {
 public:
};

C2S_CreateRoomRequest::C2S_CreateRoomRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_CreateRoomRequest)
}
C2S_CreateRoomRequest::C2S_CreateRoomRequest(const C2S_CreateRoomRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_CreateRoomRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_CreateRoomRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_CreateRoomRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata C2S_CreateRoomRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[27]);
}

// ===================================================================

class S2C_CreateRoomResponse::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& success(const S2C_CreateRoomResponse* msg);
};

const ::PROTOBUF_NAMESPACE_ID::BoolValue&
S2C_CreateRoomResponse::_Internal::success(const S2C_CreateRoomResponse* msg) {
  return *msg->success_;
}
void S2C_CreateRoomResponse::clear_success() {
  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
}
S2C_CreateRoomResponse::S2C_CreateRoomResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_CreateRoomResponse)
}
S2C_CreateRoomResponse::S2C_CreateRoomResponse(const S2C_CreateRoomResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roomcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    roomcode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_roomcode().empty()) {
    roomcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_roomcode(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_success()) {
    success_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from.success_);
  } else {
    success_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_CreateRoomResponse)
}

inline void S2C_CreateRoomResponse::SharedCtor() {
roomcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  roomcode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
success_ = nullptr;
}

S2C_CreateRoomResponse::~S2C_CreateRoomResponse() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_CreateRoomResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void S2C_CreateRoomResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  roomcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete success_;
}

void S2C_CreateRoomResponse::ArenaDtor(void* object) {
  S2C_CreateRoomResponse* _this = reinterpret_cast< S2C_CreateRoomResponse* >(object);
  (void)_this;
}
void S2C_CreateRoomResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S2C_CreateRoomResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S2C_CreateRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_CreateRoomResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomcode_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_CreateRoomResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.BoolValue success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_success(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string roomCode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_roomcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.S2C_CreateRoomResponse.roomCode"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_CreateRoomResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_CreateRoomResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::success(this), target, stream);
  }

  // string roomCode = 2;
  if (!this->_internal_roomcode().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roomcode().data(), static_cast<int>(this->_internal_roomcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S2C_CreateRoomResponse.roomCode");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_roomcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_CreateRoomResponse)
  return target;
}

size_t S2C_CreateRoomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_CreateRoomResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string roomCode = 2;
  if (!this->_internal_roomcode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roomcode());
  }

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *success_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_CreateRoomResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S2C_CreateRoomResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_CreateRoomResponse::GetClassData() const { return &_class_data_; }

void S2C_CreateRoomResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S2C_CreateRoomResponse *>(to)->MergeFrom(
      static_cast<const S2C_CreateRoomResponse &>(from));
}


void S2C_CreateRoomResponse::MergeFrom(const S2C_CreateRoomResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_CreateRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_roomcode().empty()) {
    _internal_set_roomcode(from._internal_roomcode());
  }
  if (from._internal_has_success()) {
    _internal_mutable_success()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_CreateRoomResponse::CopyFrom(const S2C_CreateRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_CreateRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_CreateRoomResponse::IsInitialized() const {
  return true;
}

void S2C_CreateRoomResponse::InternalSwap(S2C_CreateRoomResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &roomcode_, lhs_arena,
      &other->roomcode_, rhs_arena
  );
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_CreateRoomResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[28]);
}

// ===================================================================

class C2S_JoinRoomRequest::_Internal {
 public:
};

C2S_JoinRoomRequest::C2S_JoinRoomRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_JoinRoomRequest)
}
C2S_JoinRoomRequest::C2S_JoinRoomRequest(const C2S_JoinRoomRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roomcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    roomcode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_roomcode().empty()) {
    roomcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_roomcode(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_JoinRoomRequest)
}

inline void C2S_JoinRoomRequest::SharedCtor() {
roomcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  roomcode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_JoinRoomRequest::~C2S_JoinRoomRequest() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_JoinRoomRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void C2S_JoinRoomRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  roomcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void C2S_JoinRoomRequest::ArenaDtor(void* object) {
  C2S_JoinRoomRequest* _this = reinterpret_cast< C2S_JoinRoomRequest* >(object);
  (void)_this;
}
void C2S_JoinRoomRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void C2S_JoinRoomRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void C2S_JoinRoomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_JoinRoomRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomcode_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_JoinRoomRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string roomCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_roomcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2S_JoinRoomRequest.roomCode"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_JoinRoomRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_JoinRoomRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomCode = 1;
  if (!this->_internal_roomcode().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roomcode().data(), static_cast<int>(this->_internal_roomcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_JoinRoomRequest.roomCode");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_roomcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_JoinRoomRequest)
  return target;
}

size_t C2S_JoinRoomRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_JoinRoomRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string roomCode = 1;
  if (!this->_internal_roomcode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roomcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_JoinRoomRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    C2S_JoinRoomRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_JoinRoomRequest::GetClassData() const { return &_class_data_; }

void C2S_JoinRoomRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<C2S_JoinRoomRequest *>(to)->MergeFrom(
      static_cast<const C2S_JoinRoomRequest &>(from));
}


void C2S_JoinRoomRequest::MergeFrom(const C2S_JoinRoomRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_JoinRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_roomcode().empty()) {
    _internal_set_roomcode(from._internal_roomcode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_JoinRoomRequest::CopyFrom(const C2S_JoinRoomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_JoinRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_JoinRoomRequest::IsInitialized() const {
  return true;
}

void C2S_JoinRoomRequest::InternalSwap(C2S_JoinRoomRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &roomcode_, lhs_arena,
      &other->roomcode_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_JoinRoomRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[29]);
}

// ===================================================================

class S2C_JoinRoomResponse::_Internal {
 public:
};

S2C_JoinRoomResponse::S2C_JoinRoomResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_JoinRoomResponse)
}
S2C_JoinRoomResponse::S2C_JoinRoomResponse(const S2C_JoinRoomResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ipaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    ipaddress_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ipaddress().empty()) {
    ipaddress_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ipaddress(), 
      GetArenaForAllocation());
  }
  resultcode_ = from.resultcode_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_JoinRoomResponse)
}

inline void S2C_JoinRoomResponse::SharedCtor() {
ipaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  ipaddress_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
resultcode_ = 0;
}

S2C_JoinRoomResponse::~S2C_JoinRoomResponse() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_JoinRoomResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void S2C_JoinRoomResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  ipaddress_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void S2C_JoinRoomResponse::ArenaDtor(void* object) {
  S2C_JoinRoomResponse* _this = reinterpret_cast< S2C_JoinRoomResponse* >(object);
  (void)_this;
}
void S2C_JoinRoomResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S2C_JoinRoomResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S2C_JoinRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_JoinRoomResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ipaddress_.ClearToEmpty();
  resultcode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_JoinRoomResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 resultCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          resultcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string ipAddress = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_ipaddress();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.S2C_JoinRoomResponse.ipAddress"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_JoinRoomResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_JoinRoomResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 resultCode = 1;
  if (this->_internal_resultcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_resultcode(), target);
  }

  // string ipAddress = 2;
  if (!this->_internal_ipaddress().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ipaddress().data(), static_cast<int>(this->_internal_ipaddress().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S2C_JoinRoomResponse.ipAddress");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_ipaddress(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_JoinRoomResponse)
  return target;
}

size_t S2C_JoinRoomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_JoinRoomResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ipAddress = 2;
  if (!this->_internal_ipaddress().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ipaddress());
  }

  // int32 resultCode = 1;
  if (this->_internal_resultcode() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_resultcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_JoinRoomResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S2C_JoinRoomResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_JoinRoomResponse::GetClassData() const { return &_class_data_; }

void S2C_JoinRoomResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S2C_JoinRoomResponse *>(to)->MergeFrom(
      static_cast<const S2C_JoinRoomResponse &>(from));
}


void S2C_JoinRoomResponse::MergeFrom(const S2C_JoinRoomResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_JoinRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ipaddress().empty()) {
    _internal_set_ipaddress(from._internal_ipaddress());
  }
  if (from._internal_resultcode() != 0) {
    _internal_set_resultcode(from._internal_resultcode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_JoinRoomResponse::CopyFrom(const S2C_JoinRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_JoinRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_JoinRoomResponse::IsInitialized() const {
  return true;
}

void S2C_JoinRoomResponse::InternalSwap(S2C_JoinRoomResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &ipaddress_, lhs_arena,
      &other->ipaddress_, rhs_arena
  );
  swap(resultcode_, other->resultcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_JoinRoomResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[30]);
}

// ===================================================================

class C2S_QuitRoomRequest::_Internal {
 public:
};

C2S_QuitRoomRequest::C2S_QuitRoomRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_QuitRoomRequest)
}
C2S_QuitRoomRequest::C2S_QuitRoomRequest(const C2S_QuitRoomRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_QuitRoomRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_QuitRoomRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_QuitRoomRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata C2S_QuitRoomRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[31]);
}

// ===================================================================

class S2C_QuitRoomResponse::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& success(const S2C_QuitRoomResponse* msg);
};

const ::PROTOBUF_NAMESPACE_ID::BoolValue&
S2C_QuitRoomResponse::_Internal::success(const S2C_QuitRoomResponse* msg) {
  return *msg->success_;
}
void S2C_QuitRoomResponse::clear_success() {
  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
}
S2C_QuitRoomResponse::S2C_QuitRoomResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_QuitRoomResponse)
}
S2C_QuitRoomResponse::S2C_QuitRoomResponse(const S2C_QuitRoomResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_success()) {
    success_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from.success_);
  } else {
    success_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_QuitRoomResponse)
}

inline void S2C_QuitRoomResponse::SharedCtor() {
success_ = nullptr;
}

S2C_QuitRoomResponse::~S2C_QuitRoomResponse() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_QuitRoomResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void S2C_QuitRoomResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete success_;
}

void S2C_QuitRoomResponse::ArenaDtor(void* object) {
  S2C_QuitRoomResponse* _this = reinterpret_cast< S2C_QuitRoomResponse* >(object);
  (void)_this;
}
void S2C_QuitRoomResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S2C_QuitRoomResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S2C_QuitRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_QuitRoomResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_QuitRoomResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.BoolValue success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_success(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_QuitRoomResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_QuitRoomResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::success(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_QuitRoomResponse)
  return target;
}

size_t S2C_QuitRoomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_QuitRoomResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *success_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_QuitRoomResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S2C_QuitRoomResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_QuitRoomResponse::GetClassData() const { return &_class_data_; }

void S2C_QuitRoomResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S2C_QuitRoomResponse *>(to)->MergeFrom(
      static_cast<const S2C_QuitRoomResponse &>(from));
}


void S2C_QuitRoomResponse::MergeFrom(const S2C_QuitRoomResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_QuitRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_success()) {
    _internal_mutable_success()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_QuitRoomResponse::CopyFrom(const S2C_QuitRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_QuitRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_QuitRoomResponse::IsInitialized() const {
  return true;
}

void S2C_QuitRoomResponse::InternalSwap(S2C_QuitRoomResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_QuitRoomResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[32]);
}

// ===================================================================

class C2S_InviteFriendRequest::_Internal {
 public:
};

C2S_InviteFriendRequest::C2S_InviteFriendRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_InviteFriendRequest)
}
C2S_InviteFriendRequest::C2S_InviteFriendRequest(const C2S_InviteFriendRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_InviteFriendRequest)
}

inline void C2S_InviteFriendRequest::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_InviteFriendRequest::~C2S_InviteFriendRequest() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_InviteFriendRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void C2S_InviteFriendRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void C2S_InviteFriendRequest::ArenaDtor(void* object) {
  C2S_InviteFriendRequest* _this = reinterpret_cast< C2S_InviteFriendRequest* >(object);
  (void)_this;
}
void C2S_InviteFriendRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void C2S_InviteFriendRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void C2S_InviteFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_InviteFriendRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_InviteFriendRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2S_InviteFriendRequest.username"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_InviteFriendRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_InviteFriendRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_InviteFriendRequest.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_InviteFriendRequest)
  return target;
}

size_t C2S_InviteFriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_InviteFriendRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_InviteFriendRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    C2S_InviteFriendRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_InviteFriendRequest::GetClassData() const { return &_class_data_; }

void C2S_InviteFriendRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<C2S_InviteFriendRequest *>(to)->MergeFrom(
      static_cast<const C2S_InviteFriendRequest &>(from));
}


void C2S_InviteFriendRequest::MergeFrom(const C2S_InviteFriendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_InviteFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_InviteFriendRequest::CopyFrom(const C2S_InviteFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_InviteFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_InviteFriendRequest::IsInitialized() const {
  return true;
}

void C2S_InviteFriendRequest::InternalSwap(C2S_InviteFriendRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_InviteFriendRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[33]);
}

// ===================================================================

class S2C_InviteFriendResponse::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& success(const S2C_InviteFriendResponse* msg);
};

const ::PROTOBUF_NAMESPACE_ID::BoolValue&
S2C_InviteFriendResponse::_Internal::success(const S2C_InviteFriendResponse* msg) {
  return *msg->success_;
}
void S2C_InviteFriendResponse::clear_success() {
  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
}
S2C_InviteFriendResponse::S2C_InviteFriendResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_InviteFriendResponse)
}
S2C_InviteFriendResponse::S2C_InviteFriendResponse(const S2C_InviteFriendResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  invitedusername_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    invitedusername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_invitedusername().empty()) {
    invitedusername_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_invitedusername(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_success()) {
    success_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from.success_);
  } else {
    success_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_InviteFriendResponse)
}

inline void S2C_InviteFriendResponse::SharedCtor() {
invitedusername_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  invitedusername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
success_ = nullptr;
}

S2C_InviteFriendResponse::~S2C_InviteFriendResponse() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_InviteFriendResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void S2C_InviteFriendResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  invitedusername_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete success_;
}

void S2C_InviteFriendResponse::ArenaDtor(void* object) {
  S2C_InviteFriendResponse* _this = reinterpret_cast< S2C_InviteFriendResponse* >(object);
  (void)_this;
}
void S2C_InviteFriendResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S2C_InviteFriendResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S2C_InviteFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_InviteFriendResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  invitedusername_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_InviteFriendResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.BoolValue success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_success(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string invitedUserName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_invitedusername();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.S2C_InviteFriendResponse.invitedUserName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_InviteFriendResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_InviteFriendResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::success(this), target, stream);
  }

  // string invitedUserName = 2;
  if (!this->_internal_invitedusername().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invitedusername().data(), static_cast<int>(this->_internal_invitedusername().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S2C_InviteFriendResponse.invitedUserName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_invitedusername(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_InviteFriendResponse)
  return target;
}

size_t S2C_InviteFriendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_InviteFriendResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string invitedUserName = 2;
  if (!this->_internal_invitedusername().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invitedusername());
  }

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *success_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_InviteFriendResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S2C_InviteFriendResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_InviteFriendResponse::GetClassData() const { return &_class_data_; }

void S2C_InviteFriendResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S2C_InviteFriendResponse *>(to)->MergeFrom(
      static_cast<const S2C_InviteFriendResponse &>(from));
}


void S2C_InviteFriendResponse::MergeFrom(const S2C_InviteFriendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_InviteFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_invitedusername().empty()) {
    _internal_set_invitedusername(from._internal_invitedusername());
  }
  if (from._internal_has_success()) {
    _internal_mutable_success()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_InviteFriendResponse::CopyFrom(const S2C_InviteFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_InviteFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_InviteFriendResponse::IsInitialized() const {
  return true;
}

void S2C_InviteFriendResponse::InternalSwap(S2C_InviteFriendResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &invitedusername_, lhs_arena,
      &other->invitedusername_, rhs_arena
  );
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_InviteFriendResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[34]);
}

// ===================================================================

class S2O_InviteFriendNotification::_Internal {
 public:
};

S2O_InviteFriendNotification::S2O_InviteFriendNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.S2O_InviteFriendNotification)
}
S2O_InviteFriendNotification::S2O_InviteFriendNotification(const S2O_InviteFriendNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  roomcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    roomcode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_roomcode().empty()) {
    roomcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_roomcode(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S2O_InviteFriendNotification)
}

inline void S2O_InviteFriendNotification::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
roomcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  roomcode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

S2O_InviteFriendNotification::~S2O_InviteFriendNotification() {
  // @@protoc_insertion_point(destructor:Protocol.S2O_InviteFriendNotification)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void S2O_InviteFriendNotification::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roomcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void S2O_InviteFriendNotification::ArenaDtor(void* object) {
  S2O_InviteFriendNotification* _this = reinterpret_cast< S2O_InviteFriendNotification* >(object);
  (void)_this;
}
void S2O_InviteFriendNotification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S2O_InviteFriendNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S2O_InviteFriendNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2O_InviteFriendNotification)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  roomcode_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2O_InviteFriendNotification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.S2O_InviteFriendNotification.username"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string roomCode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_roomcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.S2O_InviteFriendNotification.roomCode"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2O_InviteFriendNotification::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2O_InviteFriendNotification)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S2O_InviteFriendNotification.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  // string roomCode = 2;
  if (!this->_internal_roomcode().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roomcode().data(), static_cast<int>(this->_internal_roomcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S2O_InviteFriendNotification.roomCode");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_roomcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2O_InviteFriendNotification)
  return target;
}

size_t S2O_InviteFriendNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2O_InviteFriendNotification)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // string roomCode = 2;
  if (!this->_internal_roomcode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roomcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2O_InviteFriendNotification::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S2O_InviteFriendNotification::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2O_InviteFriendNotification::GetClassData() const { return &_class_data_; }

void S2O_InviteFriendNotification::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S2O_InviteFriendNotification *>(to)->MergeFrom(
      static_cast<const S2O_InviteFriendNotification &>(from));
}


void S2O_InviteFriendNotification::MergeFrom(const S2O_InviteFriendNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2O_InviteFriendNotification)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  if (!from._internal_roomcode().empty()) {
    _internal_set_roomcode(from._internal_roomcode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2O_InviteFriendNotification::CopyFrom(const S2O_InviteFriendNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2O_InviteFriendNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2O_InviteFriendNotification::IsInitialized() const {
  return true;
}

void S2O_InviteFriendNotification::InternalSwap(S2O_InviteFriendNotification* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &roomcode_, lhs_arena,
      &other->roomcode_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata S2O_InviteFriendNotification::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[35]);
}

// ===================================================================

class C2S_StartGameRequest::_Internal {
 public:
};

C2S_StartGameRequest::C2S_StartGameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_StartGameRequest)
}
C2S_StartGameRequest::C2S_StartGameRequest(const C2S_StartGameRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_StartGameRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_StartGameRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_StartGameRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata C2S_StartGameRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[36]);
}

// ===================================================================

class S2C_StartGameResponse::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& success(const S2C_StartGameResponse* msg);
};

const ::PROTOBUF_NAMESPACE_ID::BoolValue&
S2C_StartGameResponse::_Internal::success(const S2C_StartGameResponse* msg) {
  return *msg->success_;
}
void S2C_StartGameResponse::clear_success() {
  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
}
S2C_StartGameResponse::S2C_StartGameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_StartGameResponse)
}
S2C_StartGameResponse::S2C_StartGameResponse(const S2C_StartGameResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_success()) {
    success_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from.success_);
  } else {
    success_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_StartGameResponse)
}

inline void S2C_StartGameResponse::SharedCtor() {
success_ = nullptr;
}

S2C_StartGameResponse::~S2C_StartGameResponse() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_StartGameResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void S2C_StartGameResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete success_;
}

void S2C_StartGameResponse::ArenaDtor(void* object) {
  S2C_StartGameResponse* _this = reinterpret_cast< S2C_StartGameResponse* >(object);
  (void)_this;
}
void S2C_StartGameResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S2C_StartGameResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S2C_StartGameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_StartGameResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_StartGameResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.BoolValue success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_success(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_StartGameResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_StartGameResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::success(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_StartGameResponse)
  return target;
}

size_t S2C_StartGameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_StartGameResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *success_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_StartGameResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S2C_StartGameResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_StartGameResponse::GetClassData() const { return &_class_data_; }

void S2C_StartGameResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S2C_StartGameResponse *>(to)->MergeFrom(
      static_cast<const S2C_StartGameResponse &>(from));
}


void S2C_StartGameResponse::MergeFrom(const S2C_StartGameResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_StartGameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_success()) {
    _internal_mutable_success()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_StartGameResponse::CopyFrom(const S2C_StartGameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_StartGameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_StartGameResponse::IsInitialized() const {
  return true;
}

void S2C_StartGameResponse::InternalSwap(S2C_StartGameResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_StartGameResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[37]);
}

// ===================================================================

class C2S_EndGameRequest::_Internal {
 public:
};

C2S_EndGameRequest::C2S_EndGameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_EndGameRequest)
}
C2S_EndGameRequest::C2S_EndGameRequest(const C2S_EndGameRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_EndGameRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_EndGameRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_EndGameRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata C2S_EndGameRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[38]);
}

// ===================================================================

class S2C_EndGameResponse::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::BoolValue& success(const S2C_EndGameResponse* msg);
};

const ::PROTOBUF_NAMESPACE_ID::BoolValue&
S2C_EndGameResponse::_Internal::success(const S2C_EndGameResponse* msg) {
  return *msg->success_;
}
void S2C_EndGameResponse::clear_success() {
  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
}
S2C_EndGameResponse::S2C_EndGameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_EndGameResponse)
}
S2C_EndGameResponse::S2C_EndGameResponse(const S2C_EndGameResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_success()) {
    success_ = new ::PROTOBUF_NAMESPACE_ID::BoolValue(*from.success_);
  } else {
    success_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_EndGameResponse)
}

inline void S2C_EndGameResponse::SharedCtor() {
success_ = nullptr;
}

S2C_EndGameResponse::~S2C_EndGameResponse() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_EndGameResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void S2C_EndGameResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete success_;
}

void S2C_EndGameResponse::ArenaDtor(void* object) {
  S2C_EndGameResponse* _this = reinterpret_cast< S2C_EndGameResponse* >(object);
  (void)_this;
}
void S2C_EndGameResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void S2C_EndGameResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S2C_EndGameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_EndGameResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && success_ != nullptr) {
    delete success_;
  }
  success_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_EndGameResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.BoolValue success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_success(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_EndGameResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_EndGameResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::success(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_EndGameResponse)
  return target;
}

size_t S2C_EndGameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_EndGameResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.BoolValue success = 1;
  if (this->_internal_has_success()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *success_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_EndGameResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S2C_EndGameResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_EndGameResponse::GetClassData() const { return &_class_data_; }

void S2C_EndGameResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S2C_EndGameResponse *>(to)->MergeFrom(
      static_cast<const S2C_EndGameResponse &>(from));
}


void S2C_EndGameResponse::MergeFrom(const S2C_EndGameResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_EndGameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_success()) {
    _internal_mutable_success()->::PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_EndGameResponse::CopyFrom(const S2C_EndGameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_EndGameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_EndGameResponse::IsInitialized() const {
  return true;
}

void S2C_EndGameResponse::InternalSwap(S2C_EndGameResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_EndGameResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[39]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Protocol::FriendInfo* Arena::CreateMaybeMessage< ::Protocol::FriendInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::FriendInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_ValidationRequest* Arena::CreateMaybeMessage< ::Protocol::S2C_ValidationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_ValidationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_ValidationResponse* Arena::CreateMaybeMessage< ::Protocol::C2S_ValidationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_ValidationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_SessionExpiredNotification* Arena::CreateMaybeMessage< ::Protocol::S2C_SessionExpiredNotification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_SessionExpiredNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_LoginRequest* Arena::CreateMaybeMessage< ::Protocol::C2S_LoginRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_LoginRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_LoginResponse* Arena::CreateMaybeMessage< ::Protocol::S2C_LoginResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_LoginResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_LogoutRequest* Arena::CreateMaybeMessage< ::Protocol::C2S_LogoutRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_LogoutRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_LogoutResponse* Arena::CreateMaybeMessage< ::Protocol::S2C_LogoutResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_LogoutResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_JoinRequest* Arena::CreateMaybeMessage< ::Protocol::C2S_JoinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_JoinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_JoinResponse* Arena::CreateMaybeMessage< ::Protocol::S2C_JoinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_JoinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_FindFriendRequest* Arena::CreateMaybeMessage< ::Protocol::C2S_FindFriendRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_FindFriendRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_FindFriendResponse* Arena::CreateMaybeMessage< ::Protocol::S2C_FindFriendResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_FindFriendResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_AddFriendRequest* Arena::CreateMaybeMessage< ::Protocol::C2S_AddFriendRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_AddFriendRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_AddFriendResponse* Arena::CreateMaybeMessage< ::Protocol::S2C_AddFriendResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_AddFriendResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2O_AddFriendNotification* Arena::CreateMaybeMessage< ::Protocol::S2O_AddFriendNotification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2O_AddFriendNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_CancelAddFriendRequest* Arena::CreateMaybeMessage< ::Protocol::C2S_CancelAddFriendRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_CancelAddFriendRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_CancelAddFriendResponse* Arena::CreateMaybeMessage< ::Protocol::S2C_CancelAddFriendResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_CancelAddFriendResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2O_CancelAddFriendNotification* Arena::CreateMaybeMessage< ::Protocol::S2O_CancelAddFriendNotification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2O_CancelAddFriendNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_AcceptFriendRequest* Arena::CreateMaybeMessage< ::Protocol::C2S_AcceptFriendRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_AcceptFriendRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_AcceptFriendResponse* Arena::CreateMaybeMessage< ::Protocol::S2C_AcceptFriendResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_AcceptFriendResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2O_AcceptFriendNotification* Arena::CreateMaybeMessage< ::Protocol::S2O_AcceptFriendNotification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2O_AcceptFriendNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_RefuseFriendRequest* Arena::CreateMaybeMessage< ::Protocol::C2S_RefuseFriendRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_RefuseFriendRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_RefuseFriendResponse* Arena::CreateMaybeMessage< ::Protocol::S2C_RefuseFriendResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_RefuseFriendResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_DelFriendRequest* Arena::CreateMaybeMessage< ::Protocol::C2S_DelFriendRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_DelFriendRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_DelFriendResponse* Arena::CreateMaybeMessage< ::Protocol::S2C_DelFriendResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_DelFriendResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2O_DelFriendNotification* Arena::CreateMaybeMessage< ::Protocol::S2O_DelFriendNotification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2O_DelFriendNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2O_UpdateStateNotification* Arena::CreateMaybeMessage< ::Protocol::S2O_UpdateStateNotification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2O_UpdateStateNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_CreateRoomRequest* Arena::CreateMaybeMessage< ::Protocol::C2S_CreateRoomRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_CreateRoomRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_CreateRoomResponse* Arena::CreateMaybeMessage< ::Protocol::S2C_CreateRoomResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_CreateRoomResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_JoinRoomRequest* Arena::CreateMaybeMessage< ::Protocol::C2S_JoinRoomRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_JoinRoomRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_JoinRoomResponse* Arena::CreateMaybeMessage< ::Protocol::S2C_JoinRoomResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_JoinRoomResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_QuitRoomRequest* Arena::CreateMaybeMessage< ::Protocol::C2S_QuitRoomRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_QuitRoomRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_QuitRoomResponse* Arena::CreateMaybeMessage< ::Protocol::S2C_QuitRoomResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_QuitRoomResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_InviteFriendRequest* Arena::CreateMaybeMessage< ::Protocol::C2S_InviteFriendRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_InviteFriendRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_InviteFriendResponse* Arena::CreateMaybeMessage< ::Protocol::S2C_InviteFriendResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_InviteFriendResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2O_InviteFriendNotification* Arena::CreateMaybeMessage< ::Protocol::S2O_InviteFriendNotification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2O_InviteFriendNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_StartGameRequest* Arena::CreateMaybeMessage< ::Protocol::C2S_StartGameRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_StartGameRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_StartGameResponse* Arena::CreateMaybeMessage< ::Protocol::S2C_StartGameResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_StartGameResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_EndGameRequest* Arena::CreateMaybeMessage< ::Protocol::C2S_EndGameRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_EndGameRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_EndGameResponse* Arena::CreateMaybeMessage< ::Protocol::S2C_EndGameResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_EndGameResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
